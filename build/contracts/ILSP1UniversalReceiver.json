{
  "contractName": "ILSP1UniversalReceiver",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "typeId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "returnedValue",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "receivedData",
          "type": "bytes"
        }
      ],
      "name": "UniversalReceiver",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "typeId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "universalReceiver",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"params\":{\"from\":\"The address calling the universalReceiver function\",\"receivedData\":\"The arbitrary data passed to universalReceiver function\",\"returnedValue\":\"The return value of universalReceiver function\",\"typeId\":\"The hash of a specific standard or a hook\",\"value\":\"The amount sent to the universalReceiver function\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"details\":\"Emits an event when it's succesfully executed Call the universalReceiverDelegate function in the UniversalReceiverDelegate (URD) contract, if the address of the URD was set as a value for the `_UniversalReceiverKey` in the account key/value value store of the same contract implementing the universalReceiver function and if the URD contract has the LSP1UniversalReceiverDelegate Interface Id registred using ERC165 Emits a {UniversalReceiver} event\",\"params\":{\"data\":\"The arbitrary data received with the call\",\"typeId\":\"The hash of a specific standard or a hook\"}}},\"title\":\"The interface for LSP1UniversalReceiver\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Emitted when the universalReceiver function is succesfully executed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0xbca7d0f76e439ee3302096f8ecaf8a506434a83c86639c95efd79e6b89d364ae\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c4e3931e406a2e0c69bd5a7c5a677541a36dcdda01682e46bf7180bc814495a7\",\"dweb:/ipfs/QmWRZZ2XerqFttSpcCv27Fk4bTzHAVaKHFxCLYGFmYj1uK\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n/**\n * @title The interface for LSP1UniversalReceiver\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @notice Emitted when the universalReceiver function is succesfully executed\n     * @param from The address calling the universalReceiver function\n     * @param value The amount sent to the universalReceiver function\n     * @param typeId The hash of a specific standard or a hook\n     * @param returnedValue The return value of universalReceiver function\n     * @param receivedData The arbitrary data passed to universalReceiver function\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 value,\n        bytes32 indexed typeId,\n        bytes indexed returnedValue,\n        bytes receivedData\n    );\n\n    /**\n     * @param typeId The hash of a specific standard or a hook\n     * @param data The arbitrary data received with the call\n     * @dev Emits an event when it's succesfully executed\n     *\n     * Call the universalReceiverDelegate function in the UniversalReceiverDelegate (URD) contract, if the address of the URD\n     * was set as a value for the `_UniversalReceiverKey` in the account key/value value store of the same contract implementing\n     * the universalReceiver function and if the URD contract has the LSP1UniversalReceiverDelegate Interface Id registred using ERC165\n     *\n     * Emits a {UniversalReceiver} event\n     */\n    function universalReceiver(bytes32 typeId, bytes calldata data)\n        external\n        payable\n        returns (bytes memory);\n}\n",
  "sourcePath": "@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol",
  "ast": {
    "absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol",
    "exportedSymbols": {
      "ILSP1UniversalReceiver": [
        1512
      ]
    },
    "id": 1513,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1487,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:15"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILSP1UniversalReceiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1488,
          "nodeType": "StructuredDocumentation",
          "src": "61:176:15",
          "text": " @title The interface for LSP1UniversalReceiver\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received"
        },
        "fullyImplemented": false,
        "id": 1512,
        "linearizedBaseContracts": [
          1512
        ],
        "name": "ILSP1UniversalReceiver",
        "nameLocation": "248:22:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1489,
              "nodeType": "StructuredDocumentation",
              "src": "277:455:15",
              "text": " @notice Emitted when the universalReceiver function is succesfully executed\n @param from The address calling the universalReceiver function\n @param value The amount sent to the universalReceiver function\n @param typeId The hash of a specific standard or a hook\n @param returnedValue The return value of universalReceiver function\n @param receivedData The arbitrary data passed to universalReceiver function"
            },
            "eventSelector": "9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2",
            "id": 1501,
            "name": "UniversalReceiver",
            "nameLocation": "743:17:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1491,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "786:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "770:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1493,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "808:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "800:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1495,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "typeId",
                  "nameLocation": "839:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "823:22:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1497,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "returnedValue",
                  "nameLocation": "869:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "855:27:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1496,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1499,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receivedData",
                  "nameLocation": "898:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1501,
                  "src": "892:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "760:156:15"
            },
            "src": "737:180:15"
          },
          {
            "documentation": {
              "id": 1502,
              "nodeType": "StructuredDocumentation",
              "src": "923:639:15",
              "text": " @param typeId The hash of a specific standard or a hook\n @param data The arbitrary data received with the call\n @dev Emits an event when it's succesfully executed\n Call the universalReceiverDelegate function in the UniversalReceiverDelegate (URD) contract, if the address of the URD\n was set as a value for the `_UniversalReceiverKey` in the account key/value value store of the same contract implementing\n the universalReceiver function and if the URD contract has the LSP1UniversalReceiverDelegate Interface Id registred using ERC165\n Emits a {UniversalReceiver} event"
            },
            "functionSelector": "6bb56a14",
            "id": 1511,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "universalReceiver",
            "nameLocation": "1576:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1504,
                  "mutability": "mutable",
                  "name": "typeId",
                  "nameLocation": "1602:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "1594:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1503,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1625:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "1610:19:15",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1593:37:15"
            },
            "returnParameters": {
              "id": 1510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1511,
                  "src": "1681:12:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:5:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1680:14:15"
            },
            "scope": 1512,
            "src": "1567:128:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1513,
        "src": "238:1459:15",
        "usedErrors": []
      }
    ],
    "src": "36:1662:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-27T13:31:58.621Z",
  "devdoc": {
    "details": "LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received",
    "events": {
      "UniversalReceiver(address,uint256,bytes32,bytes,bytes)": {
        "params": {
          "from": "The address calling the universalReceiver function",
          "receivedData": "The arbitrary data passed to universalReceiver function",
          "returnedValue": "The return value of universalReceiver function",
          "typeId": "The hash of a specific standard or a hook",
          "value": "The amount sent to the universalReceiver function"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "universalReceiver(bytes32,bytes)": {
        "details": "Emits an event when it's succesfully executed Call the universalReceiverDelegate function in the UniversalReceiverDelegate (URD) contract, if the address of the URD was set as a value for the `_UniversalReceiverKey` in the account key/value value store of the same contract implementing the universalReceiver function and if the URD contract has the LSP1UniversalReceiverDelegate Interface Id registred using ERC165 Emits a {UniversalReceiver} event",
        "params": {
          "data": "The arbitrary data received with the call",
          "typeId": "The hash of a specific standard or a hook"
        }
      }
    },
    "title": "The interface for LSP1UniversalReceiver",
    "version": 1
  },
  "userdoc": {
    "events": {
      "UniversalReceiver(address,uint256,bytes32,bytes,bytes)": {
        "notice": "Emitted when the universalReceiver function is succesfully executed"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}