{
  "contractName": "DaoCreator",
  "abi": [
    {
      "inputs": [],
      "name": "createUniversalProfile",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createUniversalProfileKeyManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createDaoKeyManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createVaultKeyManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "giveMaxPermissionsToDaoAndVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"createDaoKeyManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createUniversalProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createUniversalProfileKeyManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createVaultKeyManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"giveMaxPermissionsToDaoAndVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"B00ste\",\"custom:version\":\"0.92\",\"kind\":\"dev\",\"methods\":{},\"title\":\"DaoCreator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createDaoKeyManager()\":{\"notice\":\"Create the DAO Key manager.\"},\"createUniversalProfile()\":{\"notice\":\"Create the Universal Profile for the DAO.\"},\"createUniversalProfileKeyManager()\":{\"notice\":\"Create the Key Manager of the Universal Profile\"},\"createVaultKeyManager()\":{\"notice\":\"Create Vault Key Manager.\"},\"giveMaxPermissionsToDaoAndVault()\":{\"notice\":\"Give 7FFF permissions to DaoKeyManager and to VaultKeyManager.\"},\"transferOwnership()\":{\"notice\":\"transferOwnership() from UNIVERSAL_PROFILE to KEY_MANAGER and claimOwnership() of UNIVERSAL_PROFILE from KEY_MANAGER.\"}},\"notice\":\"This smart contract is responsible for creating an connecting every LEGO block needed for a working DAO suitable for the user.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/DaoCreator.sol\":\"DaoCreator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0x0dea1727273f66b0e854c346d49bacc86ad39735484a5ac07a25b280f4cdb792\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a4170d02a2b3ec5781b17a0dcfe9f8fc75113c7923e20ca80e793bc473ed3c00\",\"dweb:/ipfs/QmW2Q9UVxZwiEkx67zqGoPC8uKVPz6apZMt7J2ALsLTM78\"]},\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xe3947b1958d2a90ce0a41ce7635112f4baf24b9ad6e0a8e0d60178d7edb0355d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30394b85f5a84a639a7d42af44680998d1011292d3846f7e12633cbe47af20ec\",\"dweb:/ipfs/QmYQ8cCurFrbyfmqnhebzmfUbLBDCqUQKvQobFhsU2hQTZ\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x215fc8caf03c1af787a3e46db456bdc8e3a662345d40a34f20e35af220f4e77b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fc44c50e8440965cb7fd412be9d17cdfdb6400af8a6e0fa3e9cc9fe55b730a4a\",\"dweb:/ipfs/Qme7jiVkpW6vMjibotZoZatZFsYYg6SnDhWNkikAdUUheQ\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0xdf3d466e2d6f8d0f2e288ee01edb0cf7de2db9cac3c257b7d6a6284adf4b2480\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://16e4a90c8f2d245621808320ed6aa4ad7fcfd50b36df116e8447e5fc1700d7a9\",\"dweb:/ipfs/QmT4E9cSMuwpiABbdKExNn3Ef9wmjdmv3E9MuwkmkDv6BY\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0x410d0a0c6f9f769b79cf7d34c097c967160f5f9876453b2a1659cbb8082a4961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e1068d9896dfe4d2d73cd75506f52f572daa3a4f35c0f980fdd91d3faa52ecf\",\"dweb:/ipfs/QmVodeBozCKcU2vdofRtKF5RAi42q3zBNW9SEYrg7SexDP\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0xcb9ac83388fcacceb35734af1164e0819786f4b32b7f3e1e428dba6cd278fc97\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ba6c27bf8723350db158b30a66467589b20033f6585308cf79b15c89101bed76\",\"dweb:/ipfs/QmS4J8bQGTivPqKQqVj27Xh4hxq3VVPbVCWPKjVanEy882\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0x4144879c1923deaac59a07abd5dabb9d8c50b5b4522e3fb9158e0e63a3ce696b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://810f61f5ed8fb2ac8270751188382c0f66b268dcf5e877e2d320b6dc95c44528\",\"dweb:/ipfs/QmR7GYVw79YypsAWg5jfNzNMCE3NJqersoqCkyux3MR8oa\"]},\"@erc725/smart-contracts/contracts/utils/ErrorHandlerLib.sol\":{\"keccak256\":\"0xfabe3bd3eefe73e7add948aee9e9daf9604bedaaf8c4d4557674b74a6bbdad37\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://05a1b0ea2b1f5890c820794efd88d977bb5501ab9dee9aa15c1d770d04335561\",\"dweb:/ipfs/QmU7djirv1HmeHwrS16SCqRoTnN83voMA93vu2PwCWELdr\"]},\"@erc725/smart-contracts/contracts/utils/GasLib.sol\":{\"keccak256\":\"0xd69f4d06630e47043a59e2173badd2275c6762d9109cc792d5891101686f6c2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://55e5b55b404e0897c84c598ab5bcc4621258c13c849c1bd55d3807dd7e25705c\",\"dweb:/ipfs/QmZgAUofnxdxbp2T3dTyULqnp4kzXWWZJ8UBWqqdxi4Ywt\"]},\"@lukso/lsp-smart-contracts/contracts/Custom/ClaimOwnership.sol\":{\"keccak256\":\"0x40fdf6dbc82ad3902cd7d356b7bce1451dae8dca06522cfb03405b13b20e9a2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0c6ae883813af74633e5a8a7f1d31d9b021037ee14f4f3821be9ec3e569dfac\",\"dweb:/ipfs/Qmbs2zeXQ1s7zvFkCwET1kN6QxNEzfvLcbXcmsympfCQTZ\"]},\"@lukso/lsp-smart-contracts/contracts/Custom/ERC165Checker.sol\":{\"keccak256\":\"0x076fb61a330055d96723ad73383629e0ff2e5f903b2ba67e323318ef2e78ec7c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bf3f35a840ad8f800f149d504082abdd08d656954d9f9066f9ca4867f9428c4\",\"dweb:/ipfs/QmNSbTbn7LceU2s6QuBKoV6vA4ujVX5nvNmwR7XqT2wE3j\"]},\"@lukso/lsp-smart-contracts/contracts/Custom/IClaimOwnership.sol\":{\"keccak256\":\"0xd5836bb3cf4a7967df66c2bb67e4081c6a2e397918d3fdd4da462ff4e67c54c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a5209adb63bcba94181a2604559707987adefa3613e3ae8ef4520b9f2fa2308\",\"dweb:/ipfs/QmSkaFoUvPazeeeJfzSLK7mjFRjFobktEWqbQQncGV5dng\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0Constants.sol\":{\"keccak256\":\"0x538700fa454e889567a0c8c14c11814bf471eafd3a84b7bbc2a323dc9e4f4455\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9b8ffc61d10db950c710ffafd583661fe09a4e04a9a9b02a77252ca4538fb42e\",\"dweb:/ipfs/QmetniuqdrG6ERrSGj6t8RwuurWEtqKGGyKNAkozkbTAgg\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725Account.sol\":{\"keccak256\":\"0xcd2d9e61856d65990aa784ff8298e84055f3037929c6b2c7bccb4f96f321bef1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://05f9136ef2b4a659f65b7bf57b5fc4674476592ca21619533b13cf75e224b66a\",\"dweb:/ipfs/QmRKfzspr68P8XTwf1ghkM1EycVmugrV2fkvMnkbHHGC1Y\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725AccountCore.sol\":{\"keccak256\":\"0x1e43b938d8601383c0dd6ec6a3b994324697afefe76c1c33a05a990cdea8a555\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a5f33e59978d6cf419a3384809737c9c45d390b268f8d163c83dbf407b4ad6d7\",\"dweb:/ipfs/Qme4SBtcrpDj8XSikJUpRSa8riiEMrQxQKQEii3qihwp1i\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0xbca7d0f76e439ee3302096f8ecaf8a506434a83c86639c95efd79e6b89d364ae\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://c4e3931e406a2e0c69bd5a7c5a677541a36dcdda01682e46bf7180bc814495a7\",\"dweb:/ipfs/QmWRZZ2XerqFttSpcCv27Fk4bTzHAVaKHFxCLYGFmYj1uK\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol\":{\"keccak256\":\"0x91cfa8fec33a3d7f4141c1188fd3d2bd167db9e8420e9b9ed07c3e1f7b8a239b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://fd707b91f940a35052503056548ec30ab141cc16d73bd8355c6cb608f203d991\",\"dweb:/ipfs/QmXPUNVJLYMBYW4SzMzpG7MoLzAYupQK9R5yqQQ9gtzC9B\"]},\"@lukso/lsp-smart-contracts/contracts/LSP1UniversalReceiver/LSP1Constants.sol\":{\"keccak256\":\"0x37255dac370701b20dc046c41024686ccf5a88eb1e68415c30167015f6f80f17\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fdfe8b6cd1deddcf3d3110f54b6a8bb9a73412c4f8cc40369027e82fe55322e1\",\"dweb:/ipfs/QmdwssJrfuT3nrub7M5fr8ZwT8WeAytbx8z2K9rwgjVnv4\"]},\"@lukso/lsp-smart-contracts/contracts/LSP2ERC725YJSONSchema/LSP2Utils.sol\":{\"keccak256\":\"0xe94115fb564cc1caae9087bb10dd67d25a4bd0d1b2e05a6b6b0a1913ccc22ab7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e80e173cefedf286676b4a23a34ea388cd0c3c4acdcb6dc6850278020318986c\",\"dweb:/ipfs/QmVF8EjH27jX9e8gtMsbzu2guVH7HfmzCBt2wU3GQsUbhq\"]},\"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/ILSP6KeyManager.sol\":{\"keccak256\":\"0x6da543d9b2e792ea865402a75ed2120737572e2d71603da2dcf7a02b6b205b3d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d27c5db5df19e0963ec68fe0c87d9cf40533d7547202485e08ec18a483f441fd\",\"dweb:/ipfs/QmWPEGebDiZUjjJw3QFke2KesrFsBd6i8Ho37EuiAuEPdN\"]},\"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6Constants.sol\":{\"keccak256\":\"0x9b365ca113735c1af6071b106826989dfdc843d94f894f4d390ec1c4a0f2ac1f\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://41a741c0e9c6d439b8fe5b6a623fc2060b97bc1b3765ba4bdd5b2e30b5fab45c\",\"dweb:/ipfs/QmPbTvtDYJufibbBHYwA36imattAbKWqCjyU6bBChCJgMW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6Errors.sol\":{\"keccak256\":\"0x3a20b6332825d43b75367a10dfc73be8c28a3a2b6f70d5262943a5697f616205\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://33e1b4c325ca39d465d469698f5758560038f33cf56862d0c4d81c929189fe9a\",\"dweb:/ipfs/QmbPBsJ5BvEUYYWgqg3rgewQG8DCgcQysguN2ut59HJR9F\"]},\"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6KeyManager.sol\":{\"keccak256\":\"0xcce6d1428571a4570e0603ae55f3c32631470c2383620dfd677ffc59d515fbc0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a58ace63eaf0035175e4cb47b705cbd11c5d9fe69e2e4b3dc0f605db0fd14a7e\",\"dweb:/ipfs/QmcZpnxC6dCGo1So6VhzpywnCmctXUGS5tcapZCASANM4e\"]},\"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6KeyManagerCore.sol\":{\"keccak256\":\"0x4c9c579e6956eddd8eaea77bbd8a9e35326e4b924ece6c5d51064963ad6696a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://20f212d06820701507a4fc389526da6bd87ace7d6dc9a157e3e5a288e830c87c\",\"dweb:/ipfs/QmVj41cQYRm5hFUGK4WjukVgL7amb3QDrmdxyJWVcCJcqv\"]},\"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6Utils.sol\":{\"keccak256\":\"0xf0fbe9c646e55e97c8402adcf81855448de3f44dc3f91f0eab0cb6a5c3f7b903\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ef33ac0b63dd82ac3dfcc602087cf040a9ec7f031b41446c0027855f1f43429a\",\"dweb:/ipfs/QmSa3vXQp6Tm3sfvieypBLVU6Koy7d9jCsrvz4SAswpDri\"]},\"@lukso/lsp-smart-contracts/contracts/Utils/UtilsLib.sol\":{\"keccak256\":\"0xd5dd408e281a3ea9945def9ee2c5d1742e6fae6a09b16de95a848b7e876e2d7f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4605bb499afa6b7752ef2bb9b942bd1f3ead520c12aee4ca82358c8a91c7d37c\",\"dweb:/ipfs/QmWDtuD7tCmZp1phVdCRTapsVYGJ1eSQ7sgUD227mPfpgY\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x62237e1773cbf99739b7019f3772a2ff5360d56edb69751b513237f5fcd78571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39caaa49151a341d9c258a5b7308856d11c8cf349062314eea1e2251f0d1918\",\"dweb:/ipfs/QmcJqGdrHEdiBfB5zuA3ykY1wc2LDNtz8Y88HPEscJe71G\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/DaoAccount/DaoConstants.sol\":{\"keccak256\":\"0x356d77393e630a23903799b6e4416b035a1389c7680886eaf5daeec2ec0cf71a\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ce78412704c7429b5ff621434550257b061212f28fe80632ee52d90fa2be32fb\",\"dweb:/ipfs/QmNehQj534oukVe4DpudfB8py4FqXRvzFSGZxVzhqWg9gq\"]},\"project:/contracts/DaoAccount/DaoKeyManager.sol\":{\"keccak256\":\"0x85ee7796300c518a36e6ddf3b690369cc0c544b8820763026e0c885239ce8964\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e6c768fe9fea4325559c00b21a3b147c36154f5ce38cb5b1975406688b8fe8e9\",\"dweb:/ipfs/QmNf1sB18zq9rDoh79iFAKc6ZqgnDtrQ2Bcoa4FzPKtcCM\"]},\"project:/contracts/DaoCreator.sol\":{\"keccak256\":\"0x68b8d8a8cda5f67d921b49eb66ca21776ff2c687fb5449862e05b8221ca55912\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://793eeec4460cb95064a79edc351f9606b468b13db95edb6e9cdd26e0f9c7e774\",\"dweb:/ipfs/QmbYq3EHEbroRoKh6ERU6xxWGpY7M9yxcEtpWcaSuwp8cD\"]},\"project:/contracts/DaoVault/VaultKeyManager.sol\":{\"keccak256\":\"0xfda6d6f7937dbb3a10c4e8d281878b1c3a17df05a8d742d863965d1c7c447e07\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://1088fac8dd9528a224fd741d71ae474b000849f9db95a4f0e92cfdc7a957f337\",\"dweb:/ipfs/QmNPVbkKc8FETj5fRDyj59E8HE3p865JeiSRp2CU11kEvj\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7976:40",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:40",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:231:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:40",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:40"
                      },
                      {
                        "hexValue": "556e6976657273616c2050726f66696c6520697320616c726561647920696e69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:40",
                        "type": "",
                        "value": "Universal Profile is already ini"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:40"
                      },
                      {
                        "hexValue": "7469616c697a65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:11:40",
                        "type": "",
                        "value": "tialized."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:39:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:39:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "386:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "398:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "409:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "394:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "394:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "386:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_981b114af8adaf1d8aa1e9df278c465eaa9f0cc1cf52c6808fad9def42828bf6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:40",
                "type": ""
              }
            ],
            "src": "14:405:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "525:125:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "535:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "547:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "558:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "543:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "535:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "577:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "592:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "600:42:40",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "588:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:55:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "570:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:74:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "570:74:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "494:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "505:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "516:4:40",
                "type": ""
              }
            ],
            "src": "424:226:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "829:303:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "846:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "839:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "839:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "880:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "891:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "876:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "876:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "896:2:40",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "869:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "869:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "869:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "919:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "930:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "915:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:18:40"
                      },
                      {
                        "hexValue": "44414f204b6579204d616e61676572206e6f7420696e697469616c697a656420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "935:34:40",
                        "type": "",
                        "value": "DAO Key Manager not initialized "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "908:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "990:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1001:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "986:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "986:18:40"
                      },
                      {
                        "hexValue": "6f72205661756c74204b6579204d616e6167657220616c726561647920696e69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1006:34:40",
                        "type": "",
                        "value": "or Vault Key Manager already ini"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "979:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "979:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "979:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1061:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1072:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1057:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:19:40"
                      },
                      {
                        "hexValue": "7469616c697a65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1078:11:40",
                        "type": "",
                        "value": "tialized."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:40:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:40:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1099:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1107:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1107:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1099:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a7f95772dc71c19a4b580fd4c13d62495ca34499d3b5223bba39e883eec41272__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "806:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "820:4:40",
                "type": ""
              }
            ],
            "src": "655:477:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1311:253:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1328:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1339:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1321:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1321:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1321:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1362:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1373:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1358:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1358:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:2:40",
                        "type": "",
                        "value": "63"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1351:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1401:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1412:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1397:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:18:40"
                      },
                      {
                        "hexValue": "5661756c74204b6579204d616e61676572206e6f7420696e697469616c697a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1417:34:40",
                        "type": "",
                        "value": "Vault Key Manager not initialize"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1390:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1390:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1472:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1483:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1468:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1468:18:40"
                      },
                      {
                        "hexValue": "64206f72207065726d697373696f6e7320616c726561647920676976656e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1488:33:40",
                        "type": "",
                        "value": "d or permissions already given."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1461:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1461:61:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1461:61:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1531:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1543:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1554:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1539:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1539:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1531:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ba856712477373184afb6d0e5b1be95a09036bf019881a616269b748d1b225d9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1288:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1302:4:40",
                "type": ""
              }
            ],
            "src": "1137:427:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1601:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1618:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1621:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1611:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1611:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1611:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1715:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1718:4:40",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1708:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1708:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1708:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1739:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1742:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:15:40"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1569:184:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1790:152:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1807:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1810:77:40",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:88:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1800:88:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1904:1:40",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1907:4:40",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1897:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1897:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1897:15:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1928:1:40",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1931:4:40",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1921:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:15:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1921:15:40"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "1758:184:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2094:203:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2104:76:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2114:66:40",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff00000000000000000000000000000000"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2108:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2196:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2205:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2213:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2201:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2201:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2189:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2189:28:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2189:28:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2237:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2242:2:40",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2233:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:12:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2251:6:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2259:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2247:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2247:15:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2226:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:37:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2226:37:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2272:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2283:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2288:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2279:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2279:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2272:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes16_t_bytes16__to_t_bytes16_t_bytes16__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2062:3:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2067:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2075:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2086:3:40",
                "type": ""
              }
            ],
            "src": "1947:350:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2396:203:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2406:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2426:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2420:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2420:12:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2410:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2441:32:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "2460:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2467:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2456:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2456:16:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2450:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2450:23:40"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2441:5:40"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2510:83:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2524:59:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2537:5:40"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2552:1:40",
                                      "type": "",
                                      "value": "3"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2559:4:40",
                                          "type": "",
                                          "value": "0x20"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "2565:6:40"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "2555:3:40"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2555:17:40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "2548:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2548:25:40"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2579:1:40",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "2575:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2575:6:40"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2544:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2544:38:40"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2533:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2533:50:40"
                        },
                        "variableNames": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2524:5:40"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2488:6:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2485:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2485:16:40"
                  },
                  "nodeType": "YulIf",
                  "src": "2482:111:40"
                }
              ]
            },
            "name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2376:5:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2386:5:40",
                "type": ""
              }
            ],
            "src": "2302:297:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2751:211:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2768:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2777:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2785:66:40",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff0000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2773:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:79:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2761:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:92:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2761:92:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2873:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2878:2:40",
                            "type": "",
                            "value": "12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2869:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2869:12:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2887:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2899:26:40",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2895:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2895:31:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2883:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2883:44:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2862:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2862:66:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2862:66:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2937:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2948:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2953:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2944:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2944:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2937:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes12_t_bytes20__to_t_bytes12_t_bytes20__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2719:3:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2724:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2732:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2743:3:40",
                "type": ""
              }
            ],
            "src": "2604:358:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3086:63:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3103:3:40"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3108:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3096:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3096:19:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3124:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3135:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3140:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3131:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3131:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3124:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3062:3:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3067:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3078:3:40",
                "type": ""
              }
            ],
            "src": "2967:182:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3273:101:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3290:3:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3299:6:40"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3311:26:40",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "3307:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3307:31:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3295:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3295:44:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3283:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3283:57:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3283:57:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3349:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3360:3:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3365:2:40",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3356:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3349:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes20__to_t_bytes20__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3249:3:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3254:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3265:3:40",
                "type": ""
              }
            ],
            "src": "3154:220:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3432:205:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3442:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3451:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3446:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3511:63:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3536:3:40"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3541:1:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3532:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3532:11:40"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "3555:3:40"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3560:1:40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3551:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3551:11:40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3545:5:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3545:18:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3525:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3525:39:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3525:39:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3472:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3475:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3469:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3469:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3483:19:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3485:15:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3494:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3497:2:40",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3490:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3490:10:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3485:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3465:3:40",
                    "statements": []
                  },
                  "src": "3461:113:40"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3600:31:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "3613:3:40"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3618:6:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3609:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3609:16:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3627:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3602:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3602:27:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3602:27:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3589:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3592:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3586:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:13:40"
                  },
                  "nodeType": "YulIf",
                  "src": "3583:48:40"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "3410:3:40",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "3415:3:40",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3420:6:40",
                "type": ""
              }
            ],
            "src": "3379:258:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3691:208:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3701:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3721:5:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3715:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3715:12:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3705:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3743:3:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3748:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3736:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3736:19:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3736:19:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3790:5:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3797:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3786:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3786:16:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3808:3:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3813:4:40",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3804:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3804:14:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3820:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "3764:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:63:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3764:63:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3836:57:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3851:3:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3864:6:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3872:2:40",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3860:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3860:15:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3881:2:40",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3877:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3877:7:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3856:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3856:29:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3847:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3847:39:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3888:4:40",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3843:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3843:50:40"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3836:3:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3668:5:40",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3675:3:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3683:3:40",
                "type": ""
              }
            ],
            "src": "3642:257:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4151:1061:40",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4161:32:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4179:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4190:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4175:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4175:18:40"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4165:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4209:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4220:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4202:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4202:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4202:21:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4232:17:40",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4243:6:40"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4236:3:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4258:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4278:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4272:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4272:13:40"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4262:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4301:6:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4309:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4294:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:22:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4294:22:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4325:25:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4336:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4347:2:40",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4332:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4332:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4325:3:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4359:14:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4369:4:40",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4363:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4382:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4400:6:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4408:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4396:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:15:40"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4386:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4420:10:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4429:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4424:1:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4488:120:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4509:3:40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4520:6:40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4514:5:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4514:13:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4502:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4502:26:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4502:26:40"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4541:19:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4552:3:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4557:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4548:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4548:12:40"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4541:3:40"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4573:25:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4587:6:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4595:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4583:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4583:15:40"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4573:6:40"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4450:1:40"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4453:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4447:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4447:13:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4461:18:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4463:14:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4472:1:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4475:1:40",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4468:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4468:9:40"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4463:1:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4443:3:40",
                    "statements": []
                  },
                  "src": "4439:169:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4628:9:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4639:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4624:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4624:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4648:3:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4653:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4644:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4644:19:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4617:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:47:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4617:47:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4673:16:40",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4686:3:40"
                  },
                  "variables": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulTypedName",
                      "src": "4677:5:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4698:29:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4720:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4714:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4714:13:40"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "4702:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4743:3:40"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4748:8:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4736:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4736:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4736:21:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4766:21:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4779:3:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4784:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4775:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4775:12:40"
                  },
                  "variableNames": [
                    {
                      "name": "pos_1",
                      "nodeType": "YulIdentifier",
                      "src": "4766:5:40"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4796:49:40",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4818:3:40"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4827:1:40",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "length_1",
                                "nodeType": "YulIdentifier",
                                "src": "4830:8:40"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4823:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4823:16:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4814:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4814:26:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4842:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4810:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4810:35:40"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "4800:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4854:31:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4874:6:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4882:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4870:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4870:15:40"
                  },
                  "variables": [
                    {
                      "name": "srcPtr_1",
                      "nodeType": "YulTypedName",
                      "src": "4858:8:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4894:12:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4905:1:40",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i_1",
                      "nodeType": "YulTypedName",
                      "src": "4898:3:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4972:211:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "4993:5:40"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "tail_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "5008:6:40"
                                    },
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "5016:3:40"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "5004:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5004:16:40"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5026:2:40",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "5022:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5022:7:40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5000:3:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5000:30:40"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4986:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4986:45:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4986:45:40"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5044:51:40",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5077:8:40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5071:5:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5071:15:40"
                            },
                            {
                              "name": "tail_2",
                              "nodeType": "YulIdentifier",
                              "src": "5088:6:40"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encode_bytes",
                            "nodeType": "YulIdentifier",
                            "src": "5054:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5054:41:40"
                        },
                        "variableNames": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "5044:6:40"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5108:29:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr_1",
                              "nodeType": "YulIdentifier",
                              "src": "5124:8:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5134:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5120:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5120:17:40"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr_1",
                            "nodeType": "YulIdentifier",
                            "src": "5108:8:40"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5150:23:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos_1",
                              "nodeType": "YulIdentifier",
                              "src": "5163:5:40"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5170:2:40"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5159:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5159:14:40"
                        },
                        "variableNames": [
                          {
                            "name": "pos_1",
                            "nodeType": "YulIdentifier",
                            "src": "5150:5:40"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i_1",
                        "nodeType": "YulIdentifier",
                        "src": "4926:3:40"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "4931:8:40"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4923:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4923:17:40"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4941:22:40",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4943:18:40",
                        "value": {
                          "arguments": [
                            {
                              "name": "i_1",
                              "nodeType": "YulIdentifier",
                              "src": "4954:3:40"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4959:1:40",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4950:3:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4950:11:40"
                        },
                        "variableNames": [
                          {
                            "name": "i_1",
                            "nodeType": "YulIdentifier",
                            "src": "4943:3:40"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4919:3:40",
                    "statements": []
                  },
                  "src": "4915:268:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5192:14:40",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "5200:6:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5192:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4112:9:40",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4123:6:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4131:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4142:4:40",
                "type": ""
              }
            ],
            "src": "3904:1308:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5391:315:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5408:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5419:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5401:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5401:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5401:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5442:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5453:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5438:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5438:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5458:2:40",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5431:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5431:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5431:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5481:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5492:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5477:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5477:18:40"
                      },
                      {
                        "hexValue": "556e6976657273616c2050726f66696c65204b6579204d616e61676572206e6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5497:34:40",
                        "type": "",
                        "value": "Universal Profile Key Manager no"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5470:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5470:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5470:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5552:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5563:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5548:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5548:18:40"
                      },
                      {
                        "hexValue": "7420696e697469616c697a6564206f722044414f204b6579204d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5568:34:40",
                        "type": "",
                        "value": "t initialized or DAO Key Manager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5541:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5541:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5541:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5623:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5634:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5619:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5619:19:40"
                      },
                      {
                        "hexValue": "20616c726561647920696e697469616c697a65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5640:23:40",
                        "type": "",
                        "value": " already initialized."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5612:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5612:52:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5612:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5673:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5685:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5696:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5681:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5681:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5673:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0f8cf1d3afc50dba855341b47244cc65620942be9509dff48c4cbc6abb0e0be__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5368:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5382:4:40",
                "type": ""
              }
            ],
            "src": "5217:489:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5885:317:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5902:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5913:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5895:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5895:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5895:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5936:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5947:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5932:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5932:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5952:2:40",
                        "type": "",
                        "value": "87"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5925:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5925:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5925:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5975:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5986:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5971:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5971:18:40"
                      },
                      {
                        "hexValue": "556e6976657273616c2070726f66696c65206e6f7420696e697469616c697a65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5991:34:40",
                        "type": "",
                        "value": "Universal profile not initialize"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5964:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5964:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5964:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6046:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6057:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6042:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6042:18:40"
                      },
                      {
                        "hexValue": "64206f7220556e6976657273616c2050726f66696c65204b6579206d616e6167",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6062:34:40",
                        "type": "",
                        "value": "d or Universal Profile Key manag"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6035:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6035:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6035:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6117:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6128:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6113:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6113:19:40"
                      },
                      {
                        "hexValue": "657220616c726561647920696e697469616c697a65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6134:25:40",
                        "type": "",
                        "value": "er already initialized."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6106:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6106:54:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6106:54:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6169:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6181:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6192:3:40",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6177:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6177:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6169:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_827a9b3aab9f982bd4392693313a9b53aa72c3e20925c494d0e17dabe8fea20b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5862:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5876:4:40",
                "type": ""
              }
            ],
            "src": "5711:491:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6316:125:40",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6326:26:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6338:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6349:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6334:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6334:18:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6326:4:40"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6368:9:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6383:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6391:42:40",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6379:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6379:55:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6361:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6361:74:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6361:74:40"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6285:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6296:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6307:4:40",
                "type": ""
              }
            ],
            "src": "6207:234:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6620:244:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6637:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6648:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6630:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6630:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6630:21:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6671:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6667:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6667:18:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6687:2:40",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:30:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:30:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6710:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6721:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6706:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6706:18:40"
                      },
                      {
                        "hexValue": "5065726d697373696f6e73206e6f7420676976656e206f72204f776e65727368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6726:34:40",
                        "type": "",
                        "value": "Permissions not given or Ownersh"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6699:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6699:62:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6699:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6781:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6792:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6777:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6777:18:40"
                      },
                      {
                        "hexValue": "697020616c7265616479207472616e7366657265642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6797:24:40",
                        "type": "",
                        "value": "ip already transfered."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6770:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6770:52:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6770:52:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6831:27:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6843:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6854:3:40",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6839:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6839:19:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6831:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c93b8e5632c66451dba8c83792484b1a128a938afd468a85d7049af7b26bafb3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6597:9:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6611:4:40",
                "type": ""
              }
            ],
            "src": "6446:418:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6988:98:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7005:9:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7016:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6998:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6998:21:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6998:21:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7028:52:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7053:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7065:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7076:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7061:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7061:18:40"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "7036:16:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7036:44:40"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7028:4:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6957:9:40",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6968:6:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6979:4:40",
                "type": ""
              }
            ],
            "src": "6869:217:40"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7181:793:40",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7227:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7236:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7239:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7229:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7229:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7229:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7202:7:40"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7211:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7198:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7198:23:40"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7223:2:40",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7194:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:32:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7191:52:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7252:30:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7272:9:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7266:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7266:16:40"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "7256:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7291:28:40",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7301:18:40",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7295:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7346:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7355:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7358:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7348:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7348:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7348:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7334:6:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7342:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7331:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7331:14:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7328:34:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7371:32:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7385:9:40"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7396:6:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7381:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7381:22:40"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "7375:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7451:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7460:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7463:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7453:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7453:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7453:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7430:2:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7434:4:40",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7426:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7426:13:40"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7441:7:40"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7422:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7422:27:40"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7415:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7415:35:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7412:55:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7476:19:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "7492:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7486:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7486:9:40"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "7480:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7518:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7520:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7520:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7520:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "7510:2:40"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7514:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7507:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7507:10:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7504:36:40"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7549:17:40",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7563:2:40",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "7559:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7559:7:40"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "7553:2:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7575:23:40",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7595:2:40",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7589:5:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7589:9:40"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "7579:6:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7607:71:40",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7629:6:40"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "7653:2:40"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7657:4:40",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7649:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7649:13:40"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "7664:2:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7645:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7645:22:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7669:2:40",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7641:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7641:31:40"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "7674:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7637:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7637:40:40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7625:3:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7625:53:40"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7611:10:40",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7737:22:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7739:16:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7739:18:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7739:18:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7696:10:40"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7708:2:40"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7693:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7693:18:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7716:10:40"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7728:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7713:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7713:22:40"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7690:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7690:46:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7687:72:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7775:2:40",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7779:10:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7768:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:22:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7768:22:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7806:6:40"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "7814:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7799:6:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7799:18:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7799:18:40"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7863:16:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7872:1:40",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7875:1:40",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7865:6:40"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7865:12:40"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7865:12:40"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "7840:2:40"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "7844:2:40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7836:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7836:11:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7849:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7832:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7832:20:40"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "7854:7:40"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7829:2:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7829:33:40"
                  },
                  "nodeType": "YulIf",
                  "src": "7826:53:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7914:2:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7918:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7910:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7910:11:40"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7927:6:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7935:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7923:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7923:15:40"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "7940:2:40"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7888:21:40"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7888:55:40"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7888:55:40"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7952:16:40",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "7962:6:40"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7952:6:40"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7147:9:40",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7158:7:40",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7170:6:40",
                "type": ""
              }
            ],
            "src": "7091:883:40"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_981b114af8adaf1d8aa1e9df278c465eaa9f0cc1cf52c6808fad9def42828bf6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Universal Profile is already ini\")\n        mstore(add(headStart, 96), \"tialized.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_a7f95772dc71c19a4b580fd4c13d62495ca34499d3b5223bba39e883eec41272__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"DAO Key Manager not initialized \")\n        mstore(add(headStart, 96), \"or Vault Key Manager already ini\")\n        mstore(add(headStart, 128), \"tialized.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_ba856712477373184afb6d0e5b1be95a09036bf019881a616269b748d1b225d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"Vault Key Manager not initialize\")\n        mstore(add(headStart, 96), \"d or permissions already given.\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes16_t_bytes16__to_t_bytes16_t_bytes16__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffff00000000000000000000000000000000\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 16), and(value1, _1))\n        end := add(pos, 32)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes12_t_bytes20__to_t_bytes12_t_bytes20__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(value0, 0xffffffffffffffffffffffff0000000000000000000000000000000000000000))\n        mstore(add(pos, 12), and(value1, not(0xffffffffffffffffffffffff)))\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes20__to_t_bytes20__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(value0, not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value1)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let tail_2 := add(add(pos, shl(5, length_1)), _1)\n        let srcPtr_1 := add(value1, _1)\n        let i_1 := 0\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, add(sub(tail_2, pos), not(31)))\n            tail_2 := abi_encode_bytes(mload(srcPtr_1), tail_2)\n            srcPtr_1 := add(srcPtr_1, _1)\n            pos_1 := add(pos_1, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_stringliteral_e0f8cf1d3afc50dba855341b47244cc65620942be9509dff48c4cbc6abb0e0be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 85)\n        mstore(add(headStart, 64), \"Universal Profile Key Manager no\")\n        mstore(add(headStart, 96), \"t initialized or DAO Key Manager\")\n        mstore(add(headStart, 128), \" already initialized.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_827a9b3aab9f982bd4392693313a9b53aa72c3e20925c494d0e17dabe8fea20b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 87)\n        mstore(add(headStart, 64), \"Universal profile not initialize\")\n        mstore(add(headStart, 96), \"d or Universal Profile Key manag\")\n        mstore(add(headStart, 128), \"er already initialized.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_c93b8e5632c66451dba8c83792484b1a128a938afd468a85d7049af7b26bafb3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Permissions not given or Ownersh\")\n        mstore(add(headStart, 96), \"ip already transfered.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n}",
      "id": 40,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "839:5072:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "839:5072:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:336;;;:::i;:::-;;2836:454;;;:::i;3382:1840::-;;;:::i;2321:460::-;;;:::i;1750:514::-;;;:::i;5374:534::-;;;:::i;1337:336::-;1422:10;1409:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;1409:31:35;;1446:6;1401:52;:57;1386:129;;;;-1:-1:-1;;;1386:129:35;;216:2:40;1386:129:35;;;198:21:40;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:40;;;338:39;394:19;;1386:129:35;;;;;;;;;1604:4;1574:36;;;;;:::i;:::-;-1:-1:-1;;;;;588:55:40;;;570:74;;558:2;543:18;1574:36:35;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1534:10:35;1521:12;:24;;;;;;;;;;:90;;-1:-1:-1;;;;;1521:90:35;;;;-1:-1:-1;;1521:90:35;;;;;;;;;1617:31;;:51;;-1:-1:-1;;;;1617:51:35;-1:-1:-1;;;1617:51:35;;;1337:336::o;2836:454::-;2920:10;2907:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;2907:31:35;;2944:6;2899:52;:57;;;;:124;;-1:-1:-1;2987:10:35;2974:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;2974:31:35;;3011:6;2966:52;:57;2899:124;2884:228;;;;-1:-1:-1;;;2884:228:35;;857:2:40;2884:228:35;;;839:21:40;896:2;876:18;;;869:30;935:34;915:18;;;908:62;1006:34;986:18;;;979:62;-1:-1:-1;;;1057:19:40;;;1050:40;1107:19;;2884:228:35;655:477:40;2884:228:35;3171:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3131:10:35;3118:12;:24;;;;;;;;;;:42;;:75;;3199:86;;;-1:-1:-1;;;;;3118:75:35;;;;3199:86;;;-1:-1:-1;;;;;3118:75:35;;;;;;3247:31;;;3118:75;3240:44;3199:86;;;;;;;;;2836:454::o;3382:1840::-;3476:10;3463:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;3463:31:35;;3500:6;3455:52;:57;;;;:124;;-1:-1:-1;3543:10:35;3530:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;3530:31:35;;3567:6;3522:52;:57;3455:124;3440:218;;;;-1:-1:-1;;;3440:218:35;;1339:2:40;3440:218:35;;;1321:21:40;1378:2;1358:18;;;1351:30;1417:34;1397:18;;;1390:62;1488:33;1468:18;;;1461:61;1539:19;;3440:218:35;1137:427:40;3440:218:35;3688:16;;;3702:1;3688:16;;;;;;;;;3664:21;;3688:16;;;;;;;;;;-1:-1:-1;3688:16:35;3664:40;;270:66:20;3720:33:35;;3710:4;3715:1;3710:7;;;;;;;;:::i;:::-;;;;;;;;;;;:43;;;;3777:66;;;-1:-1:-1;;;3777:66:35;;;2189:28:40;-1:-1:-1;2233:12:40;;;2226:37;3777:66:35;;;;;;;;;;2279:12:40;;3777:66:35;;3769:75;;;:::i;:::-;3759:4;3764:1;3759:7;;;;;;;;:::i;:::-;;;;;;;;;;;:85;;;;3868:75;;;-1:-1:-1;;;3868:75:35;;;2189:28:40;3923:19:35;2233:12:40;;;2226:37;3868:75:35;;;;;;;;;;2279:12:40;;3868:75:35;;3860:84;;;:::i;:::-;3850:4;3855:1;3850:7;;;;;;;;:::i;:::-;;;;;;;;;;;:94;;;;3968:75;;;-1:-1:-1;;;3968:75:35;;;2189:28:40;4023:19:35;2233:12:40;;;2226:37;3968:75:35;;;;;;;;;;2279:12:40;;3968:75:35;;3960:84;;;:::i;:::-;3950:4;3955:1;3950:7;;;;;;;;:::i;:::-;;;;;;;;;;;:94;;;;4163:10;4150:12;:24;;;;;;;;;;;:40;;;4068:129;;-1:-1:-1;;;4068:129:35;;;2761:92:40;;;;4142:49:35;;-1:-1:-1;;4142:49:35;2869:12:40;;;2862:66;2944:12;4068:129:35;;;;;;;;;;;;4060:138;;;:::i;:::-;4050:4;4055:1;4050:7;;;;;;;;:::i;:::-;;;;;;;;;;;:148;;;;4317:10;4304:12;:24;;;;;;;;;;;:42;;;4222:131;;-1:-1:-1;;;4222:131:35;;;2761:92:40;;;;4296:51:35;;-1:-1:-1;;4296:51:35;2869:12:40;;;2862:66;2944:12;4222:131:35;;;;;;;;;;;;4214:140;;;:::i;:::-;4204:4;4209:1;4204:7;;;;;;;;:::i;:::-;;;;;;;;;;;:150;;;;4378:102;;;-1:-1:-1;;;4378:102:35;;;2761:92:40;4468:4:35;4452:22;;-1:-1:-1;;2883:44:40;2869:12;;;2862:66;4378:102:35;;;;;;;;;;2944:12:40;;4378:102:35;;4370:111;;;:::i;:::-;4360:4;4365:1;4360:7;;;;;;;;:::i;:::-;;;;;;;;;;:121;4511:14;;;4523:1;4511:14;;;;;;;;;4487:21;;4511:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;4543:33:35;;;4572:1;4543:33;;;3096:19:40;4487:38:35;;-1:-1:-1;3131:12:40;4543:33:35;;;;;;;;;;;;4531:6;4538:1;4531:9;;;;;;;;:::i;:::-;;;;;;;;;;;:45;;;;4628:10;4615:12;:24;;;;;;;;;;;:40;;;4594:63;;4607:49;;;;;-1:-1:-1;;4607:49:35;4594:63;;;3283:57:40;;;;3356:12;;4594:63:35;;;;;;;;;;;;4582:6;4589:1;4582:9;;;;;;;;:::i;:::-;;;;;;;;;;;:75;;;;4709:10;4696:12;:24;;;;;;;;;;;:42;;;4675:65;;4688:51;;;;;-1:-1:-1;;4688:51:35;4675:65;;;3283:57:40;;;;3356:12;;4675:65:35;;;;;;;;;;;;4663:6;4670:1;4663:9;;;;;;;;:::i;:::-;;;;;;:77;;;;4787:4;4771:22;;4758:36;;;;;;;-1:-1:-1;;3295:44:40;;;;3283:57;;3365:2;3356:12;;3154:220;4758:36:35;;;;;;;;;;;;;4746:6;4753:1;4746:9;;;;;;;;:::i;:::-;;;;;;:48;;;;4833:66;4825:75;;4812:89;;;;;;3096:19:40;;3140:2;3131:12;;2967:182;4812:89:35;;;;;;;;;;;;;4800:6;4807:1;4800:9;;;;;;;;:::i;:::-;;;;;;:101;;;;4940:66;4932:75;;4919:89;;;;;;3096:19:40;;3140:2;3131:12;;2967:182;4919:89:35;;;;;;;;;;;;;4907:6;4914:1;4907:9;;;;;;;;:::i;:::-;;;;;;:101;;;;5047:66;5039:75;;5026:89;;;;;;3096:19:40;;3140:2;3131:12;;2967:182;5026:89:35;;;;;;;;;;;;;5014:6;5021:1;5014:9;;;;;;;;:::i;:::-;;;;;;;;;;;:101;;;;5153:10;5140:12;:24;;;;;;;;;;;;:42;5122:95;;;;;-1:-1:-1;;;;;5140:42:35;;;;5122:69;;:95;;5199:4;;5205:6;;5122:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:1788;;3382:1840::o;2321:460::-;2403:10;2390:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;2390:31:35;;2427:6;2382:52;:57;;;;:124;;-1:-1:-1;2470:10:35;2457:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;2457:31:35;;2494:6;2449:52;:57;2382:124;2367:240;;;;-1:-1:-1;;;2367:240:35;;5419:2:40;2367:240:35;;;5401:21:40;5458:2;5438:18;;;5431:30;5497:34;5477:18;;;5470:62;5568:34;5548:18;;;5541:62;5640:23;5619:19;;;5612:52;5681:19;;2367:240:35;5217:489:40;2367:240:35;2664:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2626:10:35;2613:12;:24;;;;;;;;;;:40;;;:71;;-1:-1:-1;;2613:71:35;-1:-1:-1;;;;;2613:71:35;;;;;;;;;;;2738:31;;;;-1:-1:-1;;;;2690:86:35;;-1:-1:-1;;;2738:31:35;;;;-1:-1:-1;2731:44:35;2690:86;;;;;;;;2321:460::o;1750:514::-;1845:10;1832:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;1832:31:35;;1869:6;1824:52;:57;;;;:124;;-1:-1:-1;1912:10:35;1899:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;1899:31:35;;1936:6;1891:52;:57;1824:124;1809:242;;;;-1:-1:-1;;;1809:242:35;;5913:2:40;1809:242:35;;;5895:21:40;5952:2;5932:18;;;5925:30;5991:34;5971:18;;;5964:62;6062:34;6042:18;;;6035:62;6134:25;6113:19;;;6106:54;6177:19;;1809:242:35;5711:491:40;1809:242:35;2136:10;2123:12;:24;;;;;;;;;;;;:42;2104:62;;-1:-1:-1;;;;;2123:42:35;;;;2104:62;;;:::i;:::-;-1:-1:-1;;;;;588:55:40;;;570:74;;558:2;543:18;2104:62:35;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2070:10:35;2057:12;:24;;;;;;;;;;:36;;;;:110;;-1:-1:-1;;2057:110:35;-1:-1:-1;;;;;2057:110:35;;;;;;;;;;;2221:31;;;;-1:-1:-1;;;;2173:86:35;;-1:-1:-1;;;2221:31:35;;;;2214:44;;;2173:86;;;;;;;;;1750:514::o;5374:534::-;5454:10;5441:12;:24;;;;;;;;;;:31;;;-1:-1:-1;;;5441:31:35;;5478:6;5433:52;:57;;;;:124;;-1:-1:-1;5521:10:35;5508:12;:24;;;;;;;;;;;:31;;;-1:-1:-1;;;5508:31:35;;5500:52;:57;5433:124;5418:209;;;;-1:-1:-1;;;5418:209:35;;6648:2:40;5418:209:35;;;6630:21:40;6687:2;6667:18;;;6660:30;6726:34;6706:18;;;6699:62;6797:24;6777:18;;;6770:52;6839:19;;5418:209:35;6446:418:40;5418:209:35;5664:10;5651:12;:24;;;;;;;;;;;;:42;;;5720:36;;;;5633:129;;;;;-1:-1:-1;;;;;5720:36:35;;;5633:129;;;570:74:40;5651:42:35;;;5633:79;;543:18:40;;5633:129:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5796:10:35;5783:12;:24;;;;;;;;;;;;:36;;;5836:61;;;;;;;;;;;;;;;;;;;;;;5768:135;;;;;-1:-1:-1;;;;;5783:36:35;;;;;-1:-1:-1;5768:60:35;;-1:-1:-1;5768:135:35;;5836:61;5768:135;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5768:135:35;;;;;;;;;;;;:::i;:::-;;5374:534::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1569:184:40:-;-1:-1:-1;;;1618:1:40;1611:88;1718:4;1715:1;1708:15;1742:4;1739:1;1732:15;1758:184;-1:-1:-1;;;1807:1:40;1800:88;1907:4;1904:1;1897:15;1931:4;1928:1;1921:15;2302:297;2420:12;;2467:4;2456:16;;;2450:23;;2420:12;2485:16;;2482:111;;;2579:1;2575:6;2565;2559:4;2555:17;2552:1;2548:25;2544:38;2537:5;2533:50;2524:59;;2482:111;;2302:297;;;:::o;3379:258::-;3451:1;3461:113;3475:6;3472:1;3469:13;3461:113;;;3551:11;;;3545:18;3532:11;;;3525:39;3497:2;3490:10;3461:113;;;3592:6;3589:1;3586:13;3583:48;;;3627:1;3618:6;3613:3;3609:16;3602:27;3583:48;;3379:258;;;:::o;3642:257::-;3683:3;3721:5;3715:12;3748:6;3743:3;3736:19;3764:63;3820:6;3813:4;3808:3;3804:14;3797:4;3790:5;3786:16;3764:63;:::i;:::-;3881:2;3860:15;-1:-1:-1;;3856:29:40;3847:39;;;;3888:4;3843:50;;3642:257;-1:-1:-1;;3642:257:40:o;3904:1308::-;4190:2;4202:21;;;4272:13;;4175:18;;;4294:22;;;4142:4;;4369;;4347:2;4332:18;;;4396:15;;;4142:4;4439:169;4453:6;4450:1;4447:13;4439:169;;;4514:13;;4502:26;;4548:12;;;;4583:15;;;;4475:1;4468:9;4439:169;;;-1:-1:-1;;;4644:19:40;;;4624:18;;;4617:47;4714:13;;4736:21;;;4775:12;;;;4827:1;4823:16;;;4814:26;;4810:35;;4870:15;;;4905:1;4915:268;4931:8;4926:3;4923:17;4915:268;;;5026:2;5022:7;5016:3;5008:6;5004:16;5000:30;4993:5;4986:45;5054:41;5088:6;5077:8;5071:15;5054:41;:::i;:::-;5159:14;;;;5044:51;-1:-1:-1;5120:17:40;;;;4959:1;4950:11;4915:268;;;-1:-1:-1;5200:6:40;;3904:1308;-1:-1:-1;;;;;;;;;3904:1308:40:o;6869:217::-;7016:2;7005:9;6998:21;6979:4;7036:44;7076:2;7065:9;7061:18;7053:6;7036:44;:::i;:::-;7028:52;6869:217;-1:-1:-1;;;6869:217:40:o;7091:883::-;7170:6;7223:2;7211:9;7202:7;7198:23;7194:32;7191:52;;;7239:1;7236;7229:12;7191:52;7272:9;7266:16;7301:18;7342:2;7334:6;7331:14;7328:34;;;7358:1;7355;7348:12;7328:34;7396:6;7385:9;7381:22;7371:32;;7441:7;7434:4;7430:2;7426:13;7422:27;7412:55;;7463:1;7460;7453:12;7412:55;7492:2;7486:9;7514:2;7510;7507:10;7504:36;;;7520:18;;:::i;:::-;7595:2;7589:9;7563:2;7649:13;;-1:-1:-1;;7645:22:40;;;7669:2;7641:31;7637:40;7625:53;;;7693:18;;;7713:22;;;7690:46;7687:72;;;7739:18;;:::i;:::-;7779:10;7775:2;7768:22;7814:2;7806:6;7799:18;7854:7;7849:2;7844;7840;7836:11;7832:20;7829:33;7826:53;;;7875:1;7872;7865:12;7826:53;7888:55;7940:2;7935;7927:6;7923:15;7918:2;7914;7910:11;7888:55;:::i;:::-;7962:6;7091:883;-1:-1:-1;;;;;;;7091:883:40:o",
  "source": "// SPDX-License-Identifier: CC0-1.0\n\npragma solidity ^0.8.0;\n\nimport {LSP0ERC725Account} from \"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725Account.sol\";\nimport {LSP6KeyManager} from \"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6KeyManager.sol\";\nimport {DaoKeyManager} from \"./DaoAccount/DaoKeyManager.sol\";\nimport {VaultKeyManager} from \"./DaoVault/VaultKeyManager.sol\";\nimport {\n  _LSP6KEY_ADDRESSPERMISSIONS_ARRAY,\n  _LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX,\n  _LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX\n} from \"@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6Constants.sol\";\n\n/**\n *\n* @notice This smart contract is responsible for creating an connecting every\n* LEGO block needed for a working DAO suitable for the user.\n *\n * @author B00ste\n * @title DaoCreator\n * @custom:version 0.92\n */\ncontract DaoCreator {\n\n  /**\n   * @notice Structure for saving user progress in DAO creation.\n   */\n  struct UserProgress {\n    address payable UNIVERSAL_PROFILE;\n    address KEY_MANAGER;\n    address DAO_KEY_MANAGER;\n    address VAULT_KEY_MANAGER;\n\n    // Up to 16 phases for creating a DAO.\n    bytes2 phases;\n  }\n\n  /**\n   * @notice Mapping for storing user progress.\n   */\n  mapping (address => UserProgress) userProgress;\n  \n  /**\n   * @notice Create the Universal Profile for the DAO.\n   */\n  function createUniversalProfile() external {\n    require(\n      (uint16(userProgress[msg.sender].phases)) & (1 << 0) == 0,\n      \"Universal Profile is already initialized.\"\n    );\n    userProgress[msg.sender].UNIVERSAL_PROFILE = payable(new LSP0ERC725Account(address(this)));\n    userProgress[msg.sender].phases = bytes2(uint16(1));\n  }\n\n  /**\n   * @notice Create the Key Manager of the Universal Profile\n   */\n  function createUniversalProfileKeyManager() external {\n    require(\n      (uint16(userProgress[msg.sender].phases)) & (1 << 0) != 0 &&\n      (uint16(userProgress[msg.sender].phases)) & (1 << 1) == 0,\n      \"Universal profile not initialized or Universal Profile Key manager already initialized.\"\n    );\n    userProgress[msg.sender].KEY_MANAGER = address(new LSP6KeyManager(userProgress[msg.sender].UNIVERSAL_PROFILE));\n    userProgress[msg.sender].phases = bytes2(uint16(userProgress[msg.sender].phases) << 1);\n  }\n\n  /**\n   * @notice Create the DAO Key manager.\n   */\n  function createDaoKeyManager() external {\n    require(\n      (uint16(userProgress[msg.sender].phases)) & (1 << 1) != 0 &&\n      (uint16(userProgress[msg.sender].phases)) & (1 << 2) == 0,\n      \"Universal Profile Key Manager not initialized or DAO Key Manager already initialized.\"\n    );\n    userProgress[msg.sender].DAO_KEY_MANAGER = address(new DaoKeyManager());\n    userProgress[msg.sender].phases = bytes2(uint16(userProgress[msg.sender].phases) << 1);\n  }\n\n  /**\n   * @notice Create Vault Key Manager.\n   */\n  function createVaultKeyManager() external {\n    require(\n      (uint16(userProgress[msg.sender].phases)) & (1 << 2) != 0 &&\n      (uint16(userProgress[msg.sender].phases)) & (1 << 3) == 0,\n      \"DAO Key Manager not initialized or Vault Key Manager already initialized.\"\n    );\n    userProgress[msg.sender].VAULT_KEY_MANAGER = address(new VaultKeyManager());\n    userProgress[msg.sender].phases = bytes2(uint16(userProgress[msg.sender].phases) << 1);\n  }\n\n  /**\n   * @notice Give 7FFF permissions to DaoKeyManager and to VaultKeyManager.\n   */\n  function giveMaxPermissionsToDaoAndVault() external {\n    require(\n      (uint16(userProgress[msg.sender].phases)) & (1 << 3) != 0 &&\n      (uint16(userProgress[msg.sender].phases)) & (1 << 4) == 0,\n      \"Vault Key Manager not initialized or permissions already given.\"\n    );\n    bytes32[] memory keys = new bytes32[](7);\n    keys[0] = _LSP6KEY_ADDRESSPERMISSIONS_ARRAY;\n    keys[1] = bytes32(bytes.concat(_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX, bytes16(0)));\n    keys[2] = bytes32(bytes.concat(_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX, bytes16(uint128(1))));\n    keys[3] = bytes32(bytes.concat(_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX, bytes16(uint128(2))));\n    keys[4] = bytes32(bytes.concat(\n      _LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX,\n      bytes20(userProgress[msg.sender].DAO_KEY_MANAGER)\n    ));\n    keys[5] = bytes32(bytes.concat(\n      _LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX,\n      bytes20(userProgress[msg.sender].VAULT_KEY_MANAGER)\n    ));\n    keys[6] = bytes32(bytes.concat(\n      _LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX,\n      bytes20(address(this))\n    ));\n    bytes[] memory values = new bytes[](7);\n    values[0] = bytes.concat(bytes32(uint256(2)));\n    values[1] = bytes.concat(bytes20(userProgress[msg.sender].DAO_KEY_MANAGER));\n    values[2] = bytes.concat(bytes20(userProgress[msg.sender].VAULT_KEY_MANAGER));\n    values[3] = bytes.concat(bytes20(address(this)));\n    values[4] = bytes.concat(bytes32(0x0000000000000000000000000000000000000000000000000000000000007FFF));\n    values[5] = bytes.concat(bytes32(0x0000000000000000000000000000000000000000000000000000000000007FFF));\n    values[6] = bytes.concat(bytes32(0x0000000000000000000000000000000000000000000000000000000000000001));\n\n    LSP0ERC725Account(userProgress[msg.sender].UNIVERSAL_PROFILE).setData(\n      keys, values\n    );\n  }\n\n  /**\n   * @notice transferOwnership() from UNIVERSAL_PROFILE to KEY_MANAGER\n   * and claimOwnership() of UNIVERSAL_PROFILE from KEY_MANAGER.\n   */\n  function transferOwnership() external {\n    require(\n      (uint16(userProgress[msg.sender].phases)) & (1 << 4) != 0 &&\n      (uint16(userProgress[msg.sender].phases)) & (1 << 5) == 0,\n      \"Permissions not given or Ownership already transfered.\"\n    );\n    LSP0ERC725Account(userProgress[msg.sender].UNIVERSAL_PROFILE).transferOwnership(\n      userProgress[msg.sender].KEY_MANAGER\n    );\n    LSP6KeyManager(userProgress[msg.sender].KEY_MANAGER).execute(\n      abi.encodeWithSelector(bytes4(keccak256(\"claimOwnership()\")))\n    );\n  }\n\n}",
  "sourcePath": "/home/b00ste/Projects/universal-profile-governance/contracts/DaoCreator.sol",
  "ast": {
    "absolutePath": "project:/contracts/DaoCreator.sol",
    "exportedSymbols": {
      "DaoCreator": [
        7420
      ],
      "DaoKeyManager": [
        6715
      ],
      "LSP0ERC725Account": [
        1252
      ],
      "LSP6KeyManager": [
        2321
      ],
      "VaultKeyManager": [
        7452
      ],
      "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY": [
        2184
      ],
      "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX": [
        2187
      ],
      "_LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX": [
        2193
      ]
    },
    "id": 7421,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6717,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:35"
      },
      {
        "absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725Account.sol",
        "file": "@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/LSP0ERC725Account.sol",
        "id": 6719,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 1253,
        "src": "62:111:35",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6718,
              "name": "LSP0ERC725Account",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1252,
              "src": "70:17:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6KeyManager.sol",
        "file": "@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6KeyManager.sol",
        "id": 6721,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 2322,
        "src": "174:102:35",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6720,
              "name": "LSP6KeyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2321,
              "src": "182:14:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DaoAccount/DaoKeyManager.sol",
        "file": "./DaoAccount/DaoKeyManager.sol",
        "id": 6723,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 6716,
        "src": "277:61:35",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6722,
              "name": "DaoKeyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6715,
              "src": "285:13:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DaoVault/VaultKeyManager.sol",
        "file": "./DaoVault/VaultKeyManager.sol",
        "id": 6725,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 7453,
        "src": "339:63:35",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6724,
              "name": "VaultKeyManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7452,
              "src": "347:15:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6Constants.sol",
        "file": "@lukso/lsp-smart-contracts/contracts/LSP6KeyManager/LSP6Constants.sol",
        "id": 6729,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7421,
        "sourceUnit": 2268,
        "src": "403:218:35",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6726,
              "name": "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2184,
              "src": "414:33:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6727,
              "name": "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2187,
              "src": "451:40:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 6728,
              "name": "_LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2193,
              "src": "495:46:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DaoCreator",
        "contractDependencies": [
          1252,
          2321,
          6715,
          7452
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6730,
          "nodeType": "StructuredDocumentation",
          "src": "623:215:35",
          "text": " @notice This smart contract is responsible for creating an connecting every\n LEGO block needed for a working DAO suitable for the user.\n @author B00ste\n @title DaoCreator\n @custom:version 0.92"
        },
        "fullyImplemented": true,
        "id": 7420,
        "linearizedBaseContracts": [
          7420
        ],
        "name": "DaoCreator",
        "nameLocation": "848:10:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "DaoCreator.UserProgress",
            "id": 6741,
            "members": [
              {
                "constant": false,
                "id": 6732,
                "mutability": "mutable",
                "name": "UNIVERSAL_PROFILE",
                "nameLocation": "983:17:35",
                "nodeType": "VariableDeclaration",
                "scope": 6741,
                "src": "967:33:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 6731,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "967:15:35",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6734,
                "mutability": "mutable",
                "name": "KEY_MANAGER",
                "nameLocation": "1014:11:35",
                "nodeType": "VariableDeclaration",
                "scope": 6741,
                "src": "1006:19:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6733,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1006:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6736,
                "mutability": "mutable",
                "name": "DAO_KEY_MANAGER",
                "nameLocation": "1039:15:35",
                "nodeType": "VariableDeclaration",
                "scope": 6741,
                "src": "1031:23:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6735,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1031:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6738,
                "mutability": "mutable",
                "name": "VAULT_KEY_MANAGER",
                "nameLocation": "1068:17:35",
                "nodeType": "VariableDeclaration",
                "scope": 6741,
                "src": "1060:25:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6737,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1060:7:35",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6740,
                "mutability": "mutable",
                "name": "phases",
                "nameLocation": "1142:6:35",
                "nodeType": "VariableDeclaration",
                "scope": 6741,
                "src": "1135:13:35",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes2",
                  "typeString": "bytes2"
                },
                "typeName": {
                  "id": 6739,
                  "name": "bytes2",
                  "nodeType": "ElementaryTypeName",
                  "src": "1135:6:35",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes2",
                    "typeString": "bytes2"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserProgress",
            "nameLocation": "948:12:35",
            "nodeType": "StructDefinition",
            "scope": 7420,
            "src": "941:212:35",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6742,
              "nodeType": "StructuredDocumentation",
              "src": "1157:57:35",
              "text": " @notice Mapping for storing user progress."
            },
            "id": 6747,
            "mutability": "mutable",
            "name": "userProgress",
            "nameLocation": "1251:12:35",
            "nodeType": "VariableDeclaration",
            "scope": 7420,
            "src": "1217:46:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
              "typeString": "mapping(address => struct DaoCreator.UserProgress)"
            },
            "typeName": {
              "id": 6746,
              "keyType": {
                "id": 6743,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1226:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1217:33:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                "typeString": "mapping(address => struct DaoCreator.UserProgress)"
              },
              "valueType": {
                "id": 6745,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6744,
                  "name": "UserProgress",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6741,
                  "src": "1237:12:35"
                },
                "referencedDeclaration": 6741,
                "src": "1237:12:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserProgress_$6741_storage_ptr",
                  "typeString": "struct DaoCreator.UserProgress"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6803,
              "nodeType": "Block",
              "src": "1380:293:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 6767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 6754,
                                        "name": "userProgress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6747,
                                        "src": "1409:12:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                          "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                        }
                                      },
                                      "id": 6757,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 6755,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "1422:3:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 6756,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1422:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1409:24:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                        "typeString": "struct DaoCreator.UserProgress storage ref"
                                      }
                                    },
                                    "id": 6758,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "phases",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 6740,
                                    "src": "1409:31:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes2",
                                      "typeString": "bytes2"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes2",
                                      "typeString": "bytes2"
                                    }
                                  ],
                                  "id": 6753,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1402:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint16_$",
                                    "typeString": "type(uint16)"
                                  },
                                  "typeName": {
                                    "id": 6752,
                                    "name": "uint16",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1402:6:35",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1402:39:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              }
                            ],
                            "id": 6760,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1401:41:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "id": 6763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31",
                                  "id": 6761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1446:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<<",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 6762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1451:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1446:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              }
                            ],
                            "id": 6764,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1445:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          },
                          "src": "1401:52:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 6766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1457:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1401:57:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6976657273616c2050726f66696c6520697320616c726561647920696e697469616c697a65642e",
                        "id": 6768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1466:43:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_981b114af8adaf1d8aa1e9df278c465eaa9f0cc1cf52c6808fad9def42828bf6",
                          "typeString": "literal_string \"Universal Profile is already initialized.\""
                        },
                        "value": "Universal Profile is already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_981b114af8adaf1d8aa1e9df278c465eaa9f0cc1cf52c6808fad9def42828bf6",
                          "typeString": "literal_string \"Universal Profile is already initialized.\""
                        }
                      ],
                      "id": 6751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1386:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:129:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6770,
                  "nodeType": "ExpressionStatement",
                  "src": "1386:129:35"
                },
                {
                  "expression": {
                    "id": 6787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6771,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "1521:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 6774,
                        "indexExpression": {
                          "expression": {
                            "id": 6772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1534:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1534:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1521:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 6775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "UNIVERSAL_PROFILE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6732,
                      "src": "1521:42:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 6783,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1604:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoCreator_$7420",
                                    "typeString": "contract DaoCreator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DaoCreator_$7420",
                                    "typeString": "contract DaoCreator"
                                  }
                                ],
                                "id": 6782,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1596:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 6781,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1596:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1596:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1574:21:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_LSP0ERC725Account_$1252_$",
                              "typeString": "function (address) returns (contract LSP0ERC725Account)"
                            },
                            "typeName": {
                              "id": 6779,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6778,
                                "name": "LSP0ERC725Account",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1252,
                                "src": "1578:17:35"
                              },
                              "referencedDeclaration": 1252,
                              "src": "1578:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LSP0ERC725Account_$1252",
                                "typeString": "contract LSP0ERC725Account"
                              }
                            }
                          },
                          "id": 6785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1574:36:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LSP0ERC725Account_$1252",
                            "typeString": "contract LSP0ERC725Account"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LSP0ERC725Account_$1252",
                            "typeString": "contract LSP0ERC725Account"
                          }
                        ],
                        "id": 6777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1566:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 6776,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:8:35",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1566:45:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1521:90:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 6788,
                  "nodeType": "ExpressionStatement",
                  "src": "1521:90:35"
                },
                {
                  "expression": {
                    "id": 6801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6789,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "1617:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 6792,
                        "indexExpression": {
                          "expression": {
                            "id": 6790,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1630:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1630:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1617:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 6793,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6740,
                      "src": "1617:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 6798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1665:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 6797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1658:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint16_$",
                              "typeString": "type(uint16)"
                            },
                            "typeName": {
                              "id": 6796,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "1658:6:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1658:9:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 6795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1651:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes2_$",
                          "typeString": "type(bytes2)"
                        },
                        "typeName": {
                          "id": 6794,
                          "name": "bytes2",
                          "nodeType": "ElementaryTypeName",
                          "src": "1651:6:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1651:17:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "src": "1617:51:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes2",
                      "typeString": "bytes2"
                    }
                  },
                  "id": 6802,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:51:35"
                }
              ]
            },
            "documentation": {
              "id": 6748,
              "nodeType": "StructuredDocumentation",
              "src": "1270:64:35",
              "text": " @notice Create the Universal Profile for the DAO."
            },
            "functionSelector": "05ebdeea",
            "id": 6804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUniversalProfile",
            "nameLocation": "1346:22:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1368:2:35"
            },
            "returnParameters": {
              "id": 6750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:0:35"
            },
            "scope": 7420,
            "src": "1337:336:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6884,
              "nodeType": "Block",
              "src": "1803:461:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 6822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6811,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "1832:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 6814,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 6812,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "1845:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 6813,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "1845:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1832:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 6815,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "1832:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 6810,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1825:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 6809,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1825:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 6816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1825:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 6817,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1824:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "id": 6820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 6818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1869:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 6819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1874:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "1869:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                }
                              ],
                              "id": 6821,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1868:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            },
                            "src": "1824:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1880:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1824:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 6838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6827,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "1899:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 6830,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 6828,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "1912:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 6829,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "1912:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1899:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 6831,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "1899:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 6826,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1892:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 6825,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1892:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 6832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1892:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 6833,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1891:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "id": 6836,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 6834,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1936:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 6835,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1941:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1936:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                }
                              ],
                              "id": 6837,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1935:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            },
                            "src": "1891:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1947:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1891:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1824:124:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6976657273616c2070726f66696c65206e6f7420696e697469616c697a6564206f7220556e6976657273616c2050726f66696c65204b6579206d616e6167657220616c726561647920696e697469616c697a65642e",
                        "id": 6842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1956:89:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_827a9b3aab9f982bd4392693313a9b53aa72c3e20925c494d0e17dabe8fea20b",
                          "typeString": "literal_string \"Universal profile not initialized or Universal Profile Key manager already initialized.\""
                        },
                        "value": "Universal profile not initialized or Universal Profile Key manager already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_827a9b3aab9f982bd4392693313a9b53aa72c3e20925c494d0e17dabe8fea20b",
                          "typeString": "literal_string \"Universal profile not initialized or Universal Profile Key manager already initialized.\""
                        }
                      ],
                      "id": 6808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1809:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1809:242:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6844,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:242:35"
                },
                {
                  "expression": {
                    "id": 6862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6845,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "2057:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 6848,
                        "indexExpression": {
                          "expression": {
                            "id": 6846,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2070:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2070:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2057:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 6849,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "KEY_MANAGER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6734,
                      "src": "2057:36:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 6855,
                                  "name": "userProgress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6747,
                                  "src": "2123:12:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                    "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                  }
                                },
                                "id": 6858,
                                "indexExpression": {
                                  "expression": {
                                    "id": 6856,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2136:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 6857,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2136:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2123:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                  "typeString": "struct DaoCreator.UserProgress storage ref"
                                }
                              },
                              "id": 6859,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "UNIVERSAL_PROFILE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6732,
                              "src": "2123:42:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 6854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2104:18:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_LSP6KeyManager_$2321_$",
                              "typeString": "function (address) returns (contract LSP6KeyManager)"
                            },
                            "typeName": {
                              "id": 6853,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6852,
                                "name": "LSP6KeyManager",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2321,
                                "src": "2108:14:35"
                              },
                              "referencedDeclaration": 2321,
                              "src": "2108:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LSP6KeyManager_$2321",
                                "typeString": "contract LSP6KeyManager"
                              }
                            }
                          },
                          "id": 6860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:62:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LSP6KeyManager_$2321",
                            "typeString": "contract LSP6KeyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LSP6KeyManager_$2321",
                            "typeString": "contract LSP6KeyManager"
                          }
                        ],
                        "id": 6851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2096:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2096:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2096:71:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2057:110:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6863,
                  "nodeType": "ExpressionStatement",
                  "src": "2057:110:35"
                },
                {
                  "expression": {
                    "id": 6882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6864,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "2173:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 6867,
                        "indexExpression": {
                          "expression": {
                            "id": 6865,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2186:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2186:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2173:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 6868,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6740,
                      "src": "2173:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 6873,
                                    "name": "userProgress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6747,
                                    "src": "2221:12:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                      "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                    }
                                  },
                                  "id": 6876,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 6874,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2234:3:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 6875,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2234:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2221:24:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                    "typeString": "struct DaoCreator.UserProgress storage ref"
                                  }
                                },
                                "id": 6877,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "phases",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6740,
                                "src": "2221:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes2",
                                  "typeString": "bytes2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes2",
                                  "typeString": "bytes2"
                                }
                              ],
                              "id": 6872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2214:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 6871,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "2214:6:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2214:39:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 6879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2257:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2214:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 6870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2207:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes2_$",
                          "typeString": "type(bytes2)"
                        },
                        "typeName": {
                          "id": 6869,
                          "name": "bytes2",
                          "nodeType": "ElementaryTypeName",
                          "src": "2207:6:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2207:52:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "src": "2173:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes2",
                      "typeString": "bytes2"
                    }
                  },
                  "id": 6883,
                  "nodeType": "ExpressionStatement",
                  "src": "2173:86:35"
                }
              ]
            },
            "documentation": {
              "id": 6805,
              "nodeType": "StructuredDocumentation",
              "src": "1677:70:35",
              "text": " @notice Create the Key Manager of the Universal Profile"
            },
            "functionSelector": "69743973",
            "id": 6885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createUniversalProfileKeyManager",
            "nameLocation": "1759:32:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:2:35"
            },
            "returnParameters": {
              "id": 6807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1803:0:35"
            },
            "scope": 7420,
            "src": "1750:514:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6960,
              "nodeType": "Block",
              "src": "2361:420:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 6903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6892,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "2390:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 6895,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 6893,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2403:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 6894,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2403:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2390:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 6896,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "2390:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 6891,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2383:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 6890,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2383:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 6897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2383:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 6898,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2382:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "id": 6901,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 6899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2427:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 6900,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2432:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "2427:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                }
                              ],
                              "id": 6902,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2426:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            },
                            "src": "2382:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2438:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2382:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 6919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6908,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "2457:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 6911,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 6909,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2470:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 6910,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2470:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2457:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 6912,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "2457:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 6907,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2450:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 6906,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2450:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 6913,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2450:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 6914,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2449:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "id": 6917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 6915,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2494:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 6916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2499:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "2494:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  }
                                }
                              ],
                              "id": 6918,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2493:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            },
                            "src": "2449:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2505:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2449:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2382:124:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6976657273616c2050726f66696c65204b6579204d616e61676572206e6f7420696e697469616c697a6564206f722044414f204b6579204d616e6167657220616c726561647920696e697469616c697a65642e",
                        "id": 6923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2514:87:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0f8cf1d3afc50dba855341b47244cc65620942be9509dff48c4cbc6abb0e0be",
                          "typeString": "literal_string \"Universal Profile Key Manager not initialized or DAO Key Manager already initialized.\""
                        },
                        "value": "Universal Profile Key Manager not initialized or DAO Key Manager already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0f8cf1d3afc50dba855341b47244cc65620942be9509dff48c4cbc6abb0e0be",
                          "typeString": "literal_string \"Universal Profile Key Manager not initialized or DAO Key Manager already initialized.\""
                        }
                      ],
                      "id": 6889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2367:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:240:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6925,
                  "nodeType": "ExpressionStatement",
                  "src": "2367:240:35"
                },
                {
                  "expression": {
                    "id": 6938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6926,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "2613:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 6929,
                        "indexExpression": {
                          "expression": {
                            "id": 6927,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2626:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2626:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2613:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 6930,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "DAO_KEY_MANAGER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6736,
                      "src": "2613:40:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2664:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DaoKeyManager_$6715_$",
                              "typeString": "function () returns (contract DaoKeyManager)"
                            },
                            "typeName": {
                              "id": 6934,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6933,
                                "name": "DaoKeyManager",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 6715,
                                "src": "2668:13:35"
                              },
                              "referencedDeclaration": 6715,
                              "src": "2668:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoKeyManager_$6715",
                                "typeString": "contract DaoKeyManager"
                              }
                            }
                          },
                          "id": 6936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2664:19:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaoKeyManager_$6715",
                            "typeString": "contract DaoKeyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaoKeyManager_$6715",
                            "typeString": "contract DaoKeyManager"
                          }
                        ],
                        "id": 6932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2656:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2656:28:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2613:71:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6939,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:71:35"
                },
                {
                  "expression": {
                    "id": 6958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 6940,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "2690:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 6943,
                        "indexExpression": {
                          "expression": {
                            "id": 6941,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2703:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2703:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2690:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 6944,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6740,
                      "src": "2690:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 6949,
                                    "name": "userProgress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6747,
                                    "src": "2738:12:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                      "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                    }
                                  },
                                  "id": 6952,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 6950,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2751:3:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 6951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2751:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2738:24:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                    "typeString": "struct DaoCreator.UserProgress storage ref"
                                  }
                                },
                                "id": 6953,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "phases",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6740,
                                "src": "2738:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes2",
                                  "typeString": "bytes2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes2",
                                  "typeString": "bytes2"
                                }
                              ],
                              "id": 6948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2731:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 6947,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "2731:6:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2731:39:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 6955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2774:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2731:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 6946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2724:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes2_$",
                          "typeString": "type(bytes2)"
                        },
                        "typeName": {
                          "id": 6945,
                          "name": "bytes2",
                          "nodeType": "ElementaryTypeName",
                          "src": "2724:6:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2724:52:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "src": "2690:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes2",
                      "typeString": "bytes2"
                    }
                  },
                  "id": 6959,
                  "nodeType": "ExpressionStatement",
                  "src": "2690:86:35"
                }
              ]
            },
            "documentation": {
              "id": 6886,
              "nodeType": "StructuredDocumentation",
              "src": "2268:50:35",
              "text": " @notice Create the DAO Key manager."
            },
            "functionSelector": "5a01f4bd",
            "id": 6961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createDaoKeyManager",
            "nameLocation": "2330:19:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2349:2:35"
            },
            "returnParameters": {
              "id": 6888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2361:0:35"
            },
            "scope": 7420,
            "src": "2321:460:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7036,
              "nodeType": "Block",
              "src": "2878:412:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 6979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6968,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "2907:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 6971,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 6969,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2920:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 6970,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2920:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2907:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 6972,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "2907:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 6967,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2900:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 6966,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2900:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 6973,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2900:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 6974,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2899:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "id": 6977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 6975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2944:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 6976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2949:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "2944:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  }
                                }
                              ],
                              "id": 6978,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2943:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              }
                            },
                            "src": "2899:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2955:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2899:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 6997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 6995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 6984,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "2974:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 6987,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 6985,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2987:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 6986,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2987:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2974:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 6988,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "2974:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 6983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2967:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 6982,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2967:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 6989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2967:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 6990,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2966:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "id": 6993,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 6991,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3011:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "33",
                                    "id": 6992,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3016:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "src": "3011:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  }
                                }
                              ],
                              "id": 6994,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3010:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              }
                            },
                            "src": "2966:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 6996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3022:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2966:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2899:124:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44414f204b6579204d616e61676572206e6f7420696e697469616c697a6564206f72205661756c74204b6579204d616e6167657220616c726561647920696e697469616c697a65642e",
                        "id": 6999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3031:75:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7f95772dc71c19a4b580fd4c13d62495ca34499d3b5223bba39e883eec41272",
                          "typeString": "literal_string \"DAO Key Manager not initialized or Vault Key Manager already initialized.\""
                        },
                        "value": "DAO Key Manager not initialized or Vault Key Manager already initialized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7f95772dc71c19a4b580fd4c13d62495ca34499d3b5223bba39e883eec41272",
                          "typeString": "literal_string \"DAO Key Manager not initialized or Vault Key Manager already initialized.\""
                        }
                      ],
                      "id": 6965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2884:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2884:228:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7001,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:228:35"
                },
                {
                  "expression": {
                    "id": 7014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7002,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "3118:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 7005,
                        "indexExpression": {
                          "expression": {
                            "id": 7003,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3131:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3131:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3118:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 7006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "VAULT_KEY_MANAGER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6738,
                      "src": "3118:42:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 7011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3171:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_VaultKeyManager_$7452_$",
                              "typeString": "function () returns (contract VaultKeyManager)"
                            },
                            "typeName": {
                              "id": 7010,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 7009,
                                "name": "VaultKeyManager",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 7452,
                                "src": "3175:15:35"
                              },
                              "referencedDeclaration": 7452,
                              "src": "3175:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VaultKeyManager_$7452",
                                "typeString": "contract VaultKeyManager"
                              }
                            }
                          },
                          "id": 7012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3171:21:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaultKeyManager_$7452",
                            "typeString": "contract VaultKeyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VaultKeyManager_$7452",
                            "typeString": "contract VaultKeyManager"
                          }
                        ],
                        "id": 7008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3163:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 7007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3163:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3163:30:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3118:75:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7015,
                  "nodeType": "ExpressionStatement",
                  "src": "3118:75:35"
                },
                {
                  "expression": {
                    "id": 7034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 7016,
                          "name": "userProgress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6747,
                          "src": "3199:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                          }
                        },
                        "id": 7019,
                        "indexExpression": {
                          "expression": {
                            "id": 7017,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3212:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3212:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3199:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                          "typeString": "struct DaoCreator.UserProgress storage ref"
                        }
                      },
                      "id": 7020,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phases",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6740,
                      "src": "3199:31:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 7032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 7025,
                                    "name": "userProgress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6747,
                                    "src": "3247:12:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                      "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                    }
                                  },
                                  "id": 7028,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 7026,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3260:3:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 7027,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3260:10:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3247:24:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                    "typeString": "struct DaoCreator.UserProgress storage ref"
                                  }
                                },
                                "id": 7029,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "phases",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6740,
                                "src": "3247:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes2",
                                  "typeString": "bytes2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes2",
                                  "typeString": "bytes2"
                                }
                              ],
                              "id": 7024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3240:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint16_$",
                                "typeString": "type(uint16)"
                              },
                              "typeName": {
                                "id": 7023,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "3240:6:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3240:39:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 7031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3283:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "3240:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 7022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3233:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes2_$",
                          "typeString": "type(bytes2)"
                        },
                        "typeName": {
                          "id": 7021,
                          "name": "bytes2",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:6:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3233:52:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes2",
                        "typeString": "bytes2"
                      }
                    },
                    "src": "3199:86:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes2",
                      "typeString": "bytes2"
                    }
                  },
                  "id": 7035,
                  "nodeType": "ExpressionStatement",
                  "src": "3199:86:35"
                }
              ]
            },
            "documentation": {
              "id": 6962,
              "nodeType": "StructuredDocumentation",
              "src": "2785:48:35",
              "text": " @notice Create Vault Key Manager."
            },
            "functionSelector": "273c23a1",
            "id": 7037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVaultKeyManager",
            "nameLocation": "2845:21:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2866:2:35"
            },
            "returnParameters": {
              "id": 6964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2878:0:35"
            },
            "scope": 7420,
            "src": "2836:454:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7342,
              "nodeType": "Block",
              "src": "3434:1788:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 7057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 7055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 7044,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "3463:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 7047,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 7045,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "3476:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 7046,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3476:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3463:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 7048,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "3463:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 7043,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3456:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 7042,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3456:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7049,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3456:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 7050,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3455:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "id": 7053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 7051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3500:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "33",
                                    "id": 7052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3505:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_3_by_1",
                                      "typeString": "int_const 3"
                                    },
                                    "value": "3"
                                  },
                                  "src": "3500:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  }
                                }
                              ],
                              "id": 7054,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3499:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_8_by_1",
                                "typeString": "int_const 8"
                              }
                            },
                            "src": "3455:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 7056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3511:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3455:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 7073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 7071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 7060,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "3530:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 7063,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 7061,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "3543:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 7062,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "3543:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3530:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 7064,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "3530:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 7059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3523:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 7058,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3523:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3523:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 7066,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3522:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  },
                                  "id": 7069,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 7067,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3567:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "34",
                                    "id": 7068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3572:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "src": "3567:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  }
                                }
                              ],
                              "id": 7070,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3566:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16_by_1",
                                "typeString": "int_const 16"
                              }
                            },
                            "src": "3522:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 7072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3578:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3522:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3455:124:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661756c74204b6579204d616e61676572206e6f7420696e697469616c697a6564206f72207065726d697373696f6e7320616c726561647920676976656e2e",
                        "id": 7075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3587:65:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba856712477373184afb6d0e5b1be95a09036bf019881a616269b748d1b225d9",
                          "typeString": "literal_string \"Vault Key Manager not initialized or permissions already given.\""
                        },
                        "value": "Vault Key Manager not initialized or permissions already given."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba856712477373184afb6d0e5b1be95a09036bf019881a616269b748d1b225d9",
                          "typeString": "literal_string \"Vault Key Manager not initialized or permissions already given.\""
                        }
                      ],
                      "id": 7041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3440:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3440:218:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7077,
                  "nodeType": "ExpressionStatement",
                  "src": "3440:218:35"
                },
                {
                  "assignments": [
                    7082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7082,
                      "mutability": "mutable",
                      "name": "keys",
                      "nameLocation": "3681:4:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7342,
                      "src": "3664:21:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7080,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3664:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 7081,
                        "nodeType": "ArrayTypeName",
                        "src": "3664:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7088,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 7086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        }
                      ],
                      "id": 7085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3688:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7083,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3692:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 7084,
                        "nodeType": "ArrayTypeName",
                        "src": "3692:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      }
                    },
                    "id": 7087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:16:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3664:40:35"
                },
                {
                  "expression": {
                    "id": 7093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7089,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "3710:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7091,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 7090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3715:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3710:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7092,
                      "name": "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2184,
                      "src": "3720:33:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3710:43:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7094,
                  "nodeType": "ExpressionStatement",
                  "src": "3710:43:35"
                },
                {
                  "expression": {
                    "id": 7110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7095,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "3759:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7097,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 7096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3764:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3759:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 7103,
                              "name": "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2187,
                              "src": "3790:40:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3840:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3832:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes16_$",
                                  "typeString": "type(bytes16)"
                                },
                                "typeName": {
                                  "id": 7104,
                                  "name": "bytes16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3832:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3832:10:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "expression": {
                              "id": 7101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3777:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 7100,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3777:5:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "3777:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3777:66:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3769:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7098,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3769:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3769:75:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3759:85:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7111,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:85:35"
                },
                {
                  "expression": {
                    "id": 7130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7112,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "3850:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7114,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 7113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3855:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3850:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 7120,
                              "name": "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2187,
                              "src": "3881:40:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 7125,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3939:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      }
                                    ],
                                    "id": 7124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3931:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    },
                                    "typeName": {
                                      "id": 7123,
                                      "name": "uint128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3931:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3931:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "id": 7122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3923:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes16_$",
                                  "typeString": "type(bytes16)"
                                },
                                "typeName": {
                                  "id": 7121,
                                  "name": "bytes16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3923:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3923:19:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "expression": {
                              "id": 7118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3868:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 7117,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3868:5:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "3868:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3868:75:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3860:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7115,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3860:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3860:84:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3850:94:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7131,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:94:35"
                },
                {
                  "expression": {
                    "id": 7150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7132,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "3950:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7134,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 7133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3955:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3950:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 7140,
                              "name": "_LSP6KEY_ADDRESSPERMISSIONS_ARRAY_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2187,
                              "src": "3981:40:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "32",
                                      "id": 7145,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "4039:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      }
                                    ],
                                    "id": 7144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4031:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    },
                                    "typeName": {
                                      "id": 7143,
                                      "name": "uint128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4031:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4031:10:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "id": 7142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4023:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes16_$",
                                  "typeString": "type(bytes16)"
                                },
                                "typeName": {
                                  "id": 7141,
                                  "name": "bytes16",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4023:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4023:19:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            ],
                            "expression": {
                              "id": 7138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3968:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 7137,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "3968:5:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "3968:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3968:75:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3960:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7135,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3960:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3960:84:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3950:94:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7151,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:94:35"
                },
                {
                  "expression": {
                    "id": 7171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7152,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "4050:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7154,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 7153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4055:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4050:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 7160,
                              "name": "_LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2193,
                              "src": "4088:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes12",
                                "typeString": "bytes12"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 7163,
                                      "name": "userProgress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6747,
                                      "src": "4150:12:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                        "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                      }
                                    },
                                    "id": 7166,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 7164,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4163:3:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 7165,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4163:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4150:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                      "typeString": "struct DaoCreator.UserProgress storage ref"
                                    }
                                  },
                                  "id": 7167,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "DAO_KEY_MANAGER",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6736,
                                  "src": "4150:40:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4142:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 7161,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4142:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4142:49:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes12",
                                "typeString": "bytes12"
                              },
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "expression": {
                              "id": 7158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4068:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 7157,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4068:5:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "4068:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4068:129:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4060:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7155,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4060:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4060:138:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4050:148:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7172,
                  "nodeType": "ExpressionStatement",
                  "src": "4050:148:35"
                },
                {
                  "expression": {
                    "id": 7192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7173,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "4204:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7175,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 7174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4209:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4204:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 7181,
                              "name": "_LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2193,
                              "src": "4242:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes12",
                                "typeString": "bytes12"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 7184,
                                      "name": "userProgress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6747,
                                      "src": "4304:12:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                        "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                      }
                                    },
                                    "id": 7187,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 7185,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4317:3:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 7186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4317:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4304:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                      "typeString": "struct DaoCreator.UserProgress storage ref"
                                    }
                                  },
                                  "id": 7188,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "VAULT_KEY_MANAGER",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6738,
                                  "src": "4304:42:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4296:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 7182,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4296:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4296:51:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes12",
                                "typeString": "bytes12"
                              },
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "expression": {
                              "id": 7179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4222:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 7178,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4222:5:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "4222:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4222:131:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4214:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7176,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4214:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4214:140:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4204:150:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7193,
                  "nodeType": "ExpressionStatement",
                  "src": "4204:150:35"
                },
                {
                  "expression": {
                    "id": 7212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7194,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "4360:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 7196,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 7195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4365:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4360:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 7202,
                              "name": "_LSP6KEY_ADDRESSPERMISSIONS_PERMISSIONS_PREFIX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2193,
                              "src": "4398:46:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes12",
                                "typeString": "bytes12"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 7207,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4468:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DaoCreator_$7420",
                                        "typeString": "contract DaoCreator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DaoCreator_$7420",
                                        "typeString": "contract DaoCreator"
                                      }
                                    ],
                                    "id": 7206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4460:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 7205,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4460:7:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7208,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4460:13:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 7204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4452:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 7203,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4452:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4452:22:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes12",
                                "typeString": "bytes12"
                              },
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "expression": {
                              "id": 7200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4378:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 7199,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "4378:5:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "4378:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 7210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4378:102:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 7198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4370:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 7197,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4370:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 7211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4370:111:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4360:121:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 7213,
                  "nodeType": "ExpressionStatement",
                  "src": "4360:121:35"
                },
                {
                  "assignments": [
                    7218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7218,
                      "mutability": "mutable",
                      "name": "values",
                      "nameLocation": "4502:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 7342,
                      "src": "4487:21:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7216,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4487:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 7217,
                        "nodeType": "ArrayTypeName",
                        "src": "4487:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7224,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 7222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4523:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        }
                      ],
                      "id": 7221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4511:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 7219,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4515:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 7220,
                        "nodeType": "ArrayTypeName",
                        "src": "4515:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 7223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4511:14:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4487:38:35"
                },
                {
                  "expression": {
                    "id": 7239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7225,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "4531:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7227,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 7226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4538:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4531:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "32",
                                  "id": 7235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4572:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "id": 7234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4564:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 7233,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4564:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4564:10:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 7232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4556:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 7231,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4556:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4556:19:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4543:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7228,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4543:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "4543:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4543:33:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4531:45:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7240,
                  "nodeType": "ExpressionStatement",
                  "src": "4531:45:35"
                },
                {
                  "expression": {
                    "id": 7256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7241,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "4582:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7243,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 7242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4589:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4582:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 7249,
                                  "name": "userProgress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6747,
                                  "src": "4615:12:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                    "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                  }
                                },
                                "id": 7252,
                                "indexExpression": {
                                  "expression": {
                                    "id": 7250,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4628:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 7251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4628:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4615:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                  "typeString": "struct DaoCreator.UserProgress storage ref"
                                }
                              },
                              "id": 7253,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "DAO_KEY_MANAGER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6736,
                              "src": "4615:40:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4607:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 7247,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "4607:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4607:49:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        ],
                        "expression": {
                          "id": 7245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4594:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7244,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4594:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "4594:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4594:63:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4582:75:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7257,
                  "nodeType": "ExpressionStatement",
                  "src": "4582:75:35"
                },
                {
                  "expression": {
                    "id": 7273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7258,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "4663:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7260,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 7259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4670:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4663:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 7266,
                                  "name": "userProgress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6747,
                                  "src": "4696:12:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                    "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                  }
                                },
                                "id": 7269,
                                "indexExpression": {
                                  "expression": {
                                    "id": 7267,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4709:3:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 7268,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4709:10:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4696:24:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                  "typeString": "struct DaoCreator.UserProgress storage ref"
                                }
                              },
                              "id": 7270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "VAULT_KEY_MANAGER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6738,
                              "src": "4696:42:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4688:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 7264,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "4688:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4688:51:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        ],
                        "expression": {
                          "id": 7262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4675:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7261,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4675:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "4675:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4675:65:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4663:77:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7274,
                  "nodeType": "ExpressionStatement",
                  "src": "4663:77:35"
                },
                {
                  "expression": {
                    "id": 7289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7275,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "4746:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7277,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 7276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4753:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4746:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 7285,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4787:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoCreator_$7420",
                                    "typeString": "contract DaoCreator"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DaoCreator_$7420",
                                    "typeString": "contract DaoCreator"
                                  }
                                ],
                                "id": 7284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4779:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 7283,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4779:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4779:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 7282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4771:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 7281,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "4771:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4771:22:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        ],
                        "expression": {
                          "id": 7279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4758:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7278,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4758:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "4758:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4758:36:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4746:48:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7290,
                  "nodeType": "ExpressionStatement",
                  "src": "4746:48:35"
                },
                {
                  "expression": {
                    "id": 7302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7291,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "4800:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7293,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 7292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4807:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4800:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303037464646",
                              "id": 7299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4833:66:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32767_by_1",
                                "typeString": "int_const 32767"
                              },
                              "value": "0x0000000000000000000000000000000000000000000000000000000000007FFF"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32767_by_1",
                                "typeString": "int_const 32767"
                              }
                            ],
                            "id": 7298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4825:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 7297,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4825:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4825:75:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4812:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7294,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4812:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "4812:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4812:89:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4800:101:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7303,
                  "nodeType": "ExpressionStatement",
                  "src": "4800:101:35"
                },
                {
                  "expression": {
                    "id": 7315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7304,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "4907:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7306,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 7305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4914:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4907:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303037464646",
                              "id": 7312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4940:66:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32767_by_1",
                                "typeString": "int_const 32767"
                              },
                              "value": "0x0000000000000000000000000000000000000000000000000000000000007FFF"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32767_by_1",
                                "typeString": "int_const 32767"
                              }
                            ],
                            "id": 7311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4932:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 7310,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4932:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4932:75:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4919:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7307,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4919:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "4919:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4919:89:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4907:101:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7316,
                  "nodeType": "ExpressionStatement",
                  "src": "4907:101:35"
                },
                {
                  "expression": {
                    "id": 7328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7317,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "5014:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 7319,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 7318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5021:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5014:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303031",
                              "id": 7325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5047:66:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "0x0000000000000000000000000000000000000000000000000000000000000001"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 7324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5039:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 7323,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5039:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5039:75:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 7321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5026:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 7320,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5026:5:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "src": "5026:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 7327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5026:89:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "5014:101:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7329,
                  "nodeType": "ExpressionStatement",
                  "src": "5014:101:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7338,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7082,
                        "src": "5199:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      {
                        "id": 7339,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7218,
                        "src": "5205:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7331,
                                "name": "userProgress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6747,
                                "src": "5140:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                  "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                }
                              },
                              "id": 7334,
                              "indexExpression": {
                                "expression": {
                                  "id": 7332,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5153:3:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 7333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5153:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5140:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                "typeString": "struct DaoCreator.UserProgress storage ref"
                              }
                            },
                            "id": 7335,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "UNIVERSAL_PROFILE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6732,
                            "src": "5140:42:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 7330,
                          "name": "LSP0ERC725Account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1252,
                          "src": "5122:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LSP0ERC725Account_$1252_$",
                            "typeString": "type(contract LSP0ERC725Account)"
                          }
                        },
                        "id": 7336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5122:61:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSP0ERC725Account_$1252",
                          "typeString": "contract LSP0ERC725Account"
                        }
                      },
                      "id": 7337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 615,
                      "src": "5122:69:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[] memory,bytes memory[] memory) external"
                      }
                    },
                    "id": 7340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5122:95:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7341,
                  "nodeType": "ExpressionStatement",
                  "src": "5122:95:35"
                }
              ]
            },
            "documentation": {
              "id": 7038,
              "nodeType": "StructuredDocumentation",
              "src": "3294:85:35",
              "text": " @notice Give 7FFF permissions to DaoKeyManager and to VaultKeyManager."
            },
            "functionSelector": "42bd3829",
            "id": 7343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveMaxPermissionsToDaoAndVault",
            "nameLocation": "3391:31:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:2:35"
            },
            "returnParameters": {
              "id": 7040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3434:0:35"
            },
            "scope": 7420,
            "src": "3382:1840:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7418,
              "nodeType": "Block",
              "src": "5412:496:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 7380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 7363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 7361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 7350,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "5441:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 7353,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 7351,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "5454:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 7352,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "5454:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5441:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 7354,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "5441:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 7349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5434:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 7348,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5434:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5434:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 7356,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5433:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  },
                                  "id": 7359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 7357,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5478:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "34",
                                    "id": 7358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5483:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "src": "5478:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_16_by_1",
                                    "typeString": "int_const 16"
                                  }
                                }
                              ],
                              "id": 7360,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5477:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16_by_1",
                                "typeString": "int_const 16"
                              }
                            },
                            "src": "5433:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 7362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5489:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5433:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 7379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 7377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 7366,
                                          "name": "userProgress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6747,
                                          "src": "5508:12:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                            "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                          }
                                        },
                                        "id": 7369,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 7367,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "5521:3:35",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 7368,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "5521:10:35",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5508:24:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                          "typeString": "struct DaoCreator.UserProgress storage ref"
                                        }
                                      },
                                      "id": 7370,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "phases",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 6740,
                                      "src": "5508:31:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes2",
                                        "typeString": "bytes2"
                                      }
                                    ],
                                    "id": 7365,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5501:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint16_$",
                                      "typeString": "type(uint16)"
                                    },
                                    "typeName": {
                                      "id": 7364,
                                      "name": "uint16",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5501:6:35",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 7371,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5501:39:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                }
                              ],
                              "id": 7372,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5500:41:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "id": 7375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 7373,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5545:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<<",
                                  "rightExpression": {
                                    "hexValue": "35",
                                    "id": 7374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5550:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_5_by_1",
                                      "typeString": "int_const 5"
                                    },
                                    "value": "5"
                                  },
                                  "src": "5545:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  }
                                }
                              ],
                              "id": 7376,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5544:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            },
                            "src": "5500:52:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 7378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5556:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5500:57:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5433:124:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5065726d697373696f6e73206e6f7420676976656e206f72204f776e65727368697020616c7265616479207472616e7366657265642e",
                        "id": 7381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5565:56:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c93b8e5632c66451dba8c83792484b1a128a938afd468a85d7049af7b26bafb3",
                          "typeString": "literal_string \"Permissions not given or Ownership already transfered.\""
                        },
                        "value": "Permissions not given or Ownership already transfered."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c93b8e5632c66451dba8c83792484b1a128a938afd468a85d7049af7b26bafb3",
                          "typeString": "literal_string \"Permissions not given or Ownership already transfered.\""
                        }
                      ],
                      "id": 7347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5418:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5418:209:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7383,
                  "nodeType": "ExpressionStatement",
                  "src": "5418:209:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 7392,
                            "name": "userProgress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6747,
                            "src": "5720:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                              "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                            }
                          },
                          "id": 7395,
                          "indexExpression": {
                            "expression": {
                              "id": 7393,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5733:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5733:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5720:24:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                            "typeString": "struct DaoCreator.UserProgress storage ref"
                          }
                        },
                        "id": 7396,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "KEY_MANAGER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6734,
                        "src": "5720:36:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7385,
                                "name": "userProgress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6747,
                                "src": "5651:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                  "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                }
                              },
                              "id": 7388,
                              "indexExpression": {
                                "expression": {
                                  "id": 7386,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5664:3:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 7387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5664:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5651:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                "typeString": "struct DaoCreator.UserProgress storage ref"
                              }
                            },
                            "id": 7389,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "UNIVERSAL_PROFILE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6732,
                            "src": "5651:42:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 7384,
                          "name": "LSP0ERC725Account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1252,
                          "src": "5633:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LSP0ERC725Account_$1252_$",
                            "typeString": "type(contract LSP0ERC725Account)"
                          }
                        },
                        "id": 7390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5633:61:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSP0ERC725Account_$1252",
                          "typeString": "contract LSP0ERC725Account"
                        }
                      },
                      "id": 7391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1368,
                      "src": "5633:79:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5633:129:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7398,
                  "nodeType": "ExpressionStatement",
                  "src": "5633:129:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "636c61696d4f776e6572736869702829",
                                    "id": 7412,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5876:18:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4e71e0c8676e3746167a1acf5f45b9c4f9bfd01db4faa49dd539202eb4a76b23",
                                      "typeString": "literal_string \"claimOwnership()\""
                                    },
                                    "value": "claimOwnership()"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_4e71e0c8676e3746167a1acf5f45b9c4f9bfd01db4faa49dd539202eb4a76b23",
                                      "typeString": "literal_string \"claimOwnership()\""
                                    }
                                  ],
                                  "id": 7411,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "5866:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 7413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5866:29:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 7410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5859:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 7409,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "5859:6:35",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 7414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5859:37:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 7407,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5836:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5836:22:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 7415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5836:61:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 7400,
                                "name": "userProgress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6747,
                                "src": "5783:12:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserProgress_$6741_storage_$",
                                  "typeString": "mapping(address => struct DaoCreator.UserProgress storage ref)"
                                }
                              },
                              "id": 7403,
                              "indexExpression": {
                                "expression": {
                                  "id": 7401,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5796:3:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 7402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5796:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5783:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserProgress_$6741_storage",
                                "typeString": "struct DaoCreator.UserProgress storage ref"
                              }
                            },
                            "id": 7404,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "KEY_MANAGER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6734,
                            "src": "5783:36:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7399,
                          "name": "LSP6KeyManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2321,
                          "src": "5768:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LSP6KeyManager_$2321_$",
                            "typeString": "type(contract LSP6KeyManager)"
                          }
                        },
                        "id": 7405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5768:52:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LSP6KeyManager_$2321",
                          "typeString": "contract LSP6KeyManager"
                        }
                      },
                      "id": 7406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "execute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2542,
                      "src": "5768:60:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable external returns (bytes memory)"
                      }
                    },
                    "id": 7416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5768:135:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 7417,
                  "nodeType": "ExpressionStatement",
                  "src": "5768:135:35"
                }
              ]
            },
            "documentation": {
              "id": 7344,
              "nodeType": "StructuredDocumentation",
              "src": "5226:145:35",
              "text": " @notice transferOwnership() from UNIVERSAL_PROFILE to KEY_MANAGER\n and claimOwnership() of UNIVERSAL_PROFILE from KEY_MANAGER."
            },
            "functionSelector": "880ad0af",
            "id": 7419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "5383:17:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5400:2:35"
            },
            "returnParameters": {
              "id": 7346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5412:0:35"
            },
            "scope": 7420,
            "src": "5374:534:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7421,
        "src": "839:5072:35",
        "usedErrors": []
      }
    ],
    "src": "37:5874:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xc6fb79B9AFe203dD34ADAb7A7581B1a06470e600",
      "transactionHash": "0x9feace4d64be07729172975805747604326e7e4ba74c4f423b0afad91f7746f6"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-25T06:31:38.591Z",
  "devdoc": {
    "author": "B00ste",
    "custom:version": "0.92",
    "kind": "dev",
    "methods": {},
    "title": "DaoCreator",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createDaoKeyManager()": {
        "notice": "Create the DAO Key manager."
      },
      "createUniversalProfile()": {
        "notice": "Create the Universal Profile for the DAO."
      },
      "createUniversalProfileKeyManager()": {
        "notice": "Create the Key Manager of the Universal Profile"
      },
      "createVaultKeyManager()": {
        "notice": "Create Vault Key Manager."
      },
      "giveMaxPermissionsToDaoAndVault()": {
        "notice": "Give 7FFF permissions to DaoKeyManager and to VaultKeyManager."
      },
      "transferOwnership()": {
        "notice": "transferOwnership() from UNIVERSAL_PROFILE to KEY_MANAGER and claimOwnership() of UNIVERSAL_PROFILE from KEY_MANAGER."
      }
    },
    "notice": "This smart contract is responsible for creating an connecting every LEGO block needed for a working DAO suitable for the user.",
    "version": 1
  }
}