{
  "contractName": "IERC725X",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "operation",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "operation",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "operationType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operation\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operation\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725X provides the ability to call arbitrary functions at any other smart contract and itself, including using `delegatecall`, `staticcall`, as well creating contracts using `create` and `create2` This is the basis for a smart contract based account system, but could also be used as a proxy account system\",\"events\":{\"ContractCreated(uint256,address,uint256)\":{\"params\":{\"contractAddress\":\"The created contract address\",\"operation\":\"The operation used to create a contract\",\"value\":\"The amount of native tokens (in Wei) sent to the created contract address\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"params\":{\"operation\":\"The operation used to execute a contract\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call\",\"to\":\"The address where the call is executed\",\"value\":\"The amount of native tokens transferred with the call (in Wei).\"}}},\"kind\":\"dev\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"details\":\"Executes any other smart contract. SHOULD only be callable by the owner of the contract set via ERC173 Emits a {Executed} event, when a call is executed under `operationType` 0, 3 and 4 Emits a {ContractCreated} event, when a contract is created under `operationType` 1 and 2\",\"params\":{\"data\":\"The call data, or the bytecode of the contract to deploy\",\"operationType\":\"The operation to execute: CALL = 0 CREATE = 1 CREATE2 = 2 STATICCALL = 3 DELEGATECALL = 4\",\"to\":\"The smart contract or address to interact with, `to` will be unused if a contract is created (operation 1 and 2)\",\"value\":\"The amount of native tokens to transfer (in Wei).\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725X General executor\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(uint256,address,uint256)\":{\"notice\":\"Emitted when a contract is created\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Emitted when a contract executed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":\"IERC725X\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0xcb9ac83388fcacceb35734af1164e0819786f4b32b7f3e1e428dba6cd278fc97\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://ba6c27bf8723350db158b30a66467589b20033f6585308cf79b15c89101bed76\",\"dweb:/ipfs/QmS4J8bQGTivPqKQqVj27Xh4hxq3VVPbVCWPKjVanEy882\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725X General executor\n * @dev ERC725X provides the ability to call arbitrary functions at any other smart contract and itself,\n * including using `delegatecall`, `staticcall`, as well creating contracts using `create` and `create2`\n * This is the basis for a smart contract based account system, but could also be used as a proxy account system\n */\ninterface IERC725X is IERC165 {\n    /**\n     * @notice Emitted when a contract is created\n     * @param operation The operation used to create a contract\n     * @param contractAddress The created contract address\n     * @param value The amount of native tokens (in Wei) sent to the created contract address\n     */\n    event ContractCreated(\n        uint256 indexed operation,\n        address indexed contractAddress,\n        uint256 indexed value\n    );\n\n    /**\n     * @notice Emitted when a contract executed.\n     * @param operation The operation used to execute a contract\n     * @param to The address where the call is executed\n     * @param value The amount of native tokens transferred with the call (in Wei).\n     * @param selector The first 4 bytes (= function selector) of the data sent with the call\n     */\n    event Executed(\n        uint256 indexed operation,\n        address indexed to,\n        uint256 indexed value,\n        bytes4 selector\n    );\n\n    /**\n     * @param operationType The operation to execute: CALL = 0 CREATE = 1 CREATE2 = 2 STATICCALL = 3 DELEGATECALL = 4\n     * @param to The smart contract or address to interact with, `to` will be unused if a contract is created (operation 1 and 2)\n     * @param value The amount of native tokens to transfer (in Wei).\n     * @param data The call data, or the bytecode of the contract to deploy\n     * @dev Executes any other smart contract.\n     * SHOULD only be callable by the owner of the contract set via ERC173\n     *\n     * Emits a {Executed} event, when a call is executed under `operationType` 0, 3 and 4\n     * Emits a {ContractCreated} event, when a contract is created under `operationType` 1 and 2\n     */\n    function execute(\n        uint256 operationType,\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n",
  "sourcePath": "@erc725/smart-contracts/contracts/interfaces/IERC725X.sol",
  "ast": {
    "absolutePath": "@erc725/smart-contracts/contracts/interfaces/IERC725X.sol",
    "exportedSymbols": {
      "IERC165": [
        5288
      ],
      "IERC725X": [
        846
      ]
    },
    "id": 847,
    "license": "CC0-1.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 806,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "id": 808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 847,
        "sourceUnit": 5289,
        "src": "75:80:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 807,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5288,
              "src": "83:7:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 810,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5288,
              "src": "563:7:5"
            },
            "id": 811,
            "nodeType": "InheritanceSpecifier",
            "src": "563:7:5"
          }
        ],
        "canonicalName": "IERC725X",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 809,
          "nodeType": "StructuredDocumentation",
          "src": "157:383:5",
          "text": " @title The interface for ERC725X General executor\n @dev ERC725X provides the ability to call arbitrary functions at any other smart contract and itself,\n including using `delegatecall`, `staticcall`, as well creating contracts using `create` and `create2`\n This is the basis for a smart contract based account system, but could also be used as a proxy account system"
        },
        "fullyImplemented": false,
        "id": 846,
        "linearizedBaseContracts": [
          846,
          5288
        ],
        "name": "IERC725X",
        "nameLocation": "551:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 812,
              "nodeType": "StructuredDocumentation",
              "src": "577:278:5",
              "text": " @notice Emitted when a contract is created\n @param operation The operation used to create a contract\n @param contractAddress The created contract address\n @param value The amount of native tokens (in Wei) sent to the created contract address"
            },
            "eventSelector": "01c42bd7e97a66166063b02fce6924e6656b6c2c61966630165095c4fb0b7b2f",
            "id": 820,
            "name": "ContractCreated",
            "nameLocation": "866:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 814,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "907:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "891:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "942:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "926:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 818,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "983:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "967:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "881:113:5"
            },
            "src": "860:135:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 821,
              "nodeType": "StructuredDocumentation",
              "src": "1001:359:5",
              "text": " @notice Emitted when a contract executed.\n @param operation The operation used to execute a contract\n @param to The address where the call is executed\n @param value The amount of native tokens transferred with the call (in Wei).\n @param selector The first 4 bytes (= function selector) of the data sent with the call"
            },
            "eventSelector": "4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e",
            "id": 831,
            "name": "Executed",
            "nameLocation": "1371:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "1405:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1389:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1389:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1440:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1424:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 827,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1468:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1452:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "1490:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "1483:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1379:125:5"
            },
            "src": "1365:140:5"
          },
          {
            "documentation": {
              "id": 832,
              "nodeType": "StructuredDocumentation",
              "src": "1511:721:5",
              "text": " @param operationType The operation to execute: CALL = 0 CREATE = 1 CREATE2 = 2 STATICCALL = 3 DELEGATECALL = 4\n @param to The smart contract or address to interact with, `to` will be unused if a contract is created (operation 1 and 2)\n @param value The amount of native tokens to transfer (in Wei).\n @param data The call data, or the bytecode of the contract to deploy\n @dev Executes any other smart contract.\n SHOULD only be callable by the owner of the contract set via ERC173\n Emits a {Executed} event, when a call is executed under `operationType` 0, 3 and 4\n Emits a {ContractCreated} event, when a contract is created under `operationType` 1 and 2"
            },
            "functionSelector": "44c028fe",
            "id": 845,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "2246:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "operationType",
                  "nameLocation": "2271:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "2263:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2302:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "2294:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 838,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2322:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "2314:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2352:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "2337:19:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:109:5"
            },
            "returnParameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "2389:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2388:14:5"
            },
            "scope": 846,
            "src": "2237:166:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 847,
        "src": "541:1864:5",
        "usedErrors": []
      }
    ],
    "src": "36:2370:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-27T13:31:58.539Z",
  "devdoc": {
    "details": "ERC725X provides the ability to call arbitrary functions at any other smart contract and itself, including using `delegatecall`, `staticcall`, as well creating contracts using `create` and `create2` This is the basis for a smart contract based account system, but could also be used as a proxy account system",
    "events": {
      "ContractCreated(uint256,address,uint256)": {
        "params": {
          "contractAddress": "The created contract address",
          "operation": "The operation used to create a contract",
          "value": "The amount of native tokens (in Wei) sent to the created contract address"
        }
      },
      "Executed(uint256,address,uint256,bytes4)": {
        "params": {
          "operation": "The operation used to execute a contract",
          "selector": "The first 4 bytes (= function selector) of the data sent with the call",
          "to": "The address where the call is executed",
          "value": "The amount of native tokens transferred with the call (in Wei)."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "execute(uint256,address,uint256,bytes)": {
        "details": "Executes any other smart contract. SHOULD only be callable by the owner of the contract set via ERC173 Emits a {Executed} event, when a call is executed under `operationType` 0, 3 and 4 Emits a {ContractCreated} event, when a contract is created under `operationType` 1 and 2",
        "params": {
          "data": "The call data, or the bytecode of the contract to deploy",
          "operationType": "The operation to execute: CALL = 0 CREATE = 1 CREATE2 = 2 STATICCALL = 3 DELEGATECALL = 4",
          "to": "The smart contract or address to interact with, `to` will be unused if a contract is created (operation 1 and 2)",
          "value": "The amount of native tokens to transfer (in Wei)."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "title": "The interface for ERC725X General executor",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ContractCreated(uint256,address,uint256)": {
        "notice": "Emitted when a contract is created"
      },
      "Executed(uint256,address,uint256,bytes4)": {
        "notice": "Emitted when a contract executed."
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}